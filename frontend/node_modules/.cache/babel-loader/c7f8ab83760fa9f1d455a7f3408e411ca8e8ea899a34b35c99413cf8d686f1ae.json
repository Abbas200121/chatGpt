{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\chatGpt\\\\frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMessages, sendMessage } from \"../services/api\"; // ✅ Import API functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"Chatbot\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [typingMessage, setTypingMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  // ✅ Load messages when user logs in\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/\"); // Redirect if no token\n    } else {\n      fetchMessages(); // Load previous messages\n    }\n  }, [navigate]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, typingMessage]);\n\n  // ✅ Fetch previous messages from backend\n  const fetchMessages = async () => {\n    try {\n      const data = await getMessages();\n      const formattedMessages = data.map(msg => [{\n        text: msg.content,\n        isUser: true\n      }, {\n        text: msg.response,\n        isUser: false\n      }]).flat(); // Flatten to keep proper message order\n\n      setMessages(formattedMessages);\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\"); // Remove the auth token\n    navigate(\"/\"); // Redirect to login page\n  };\n  const handleSend = async () => {\n    if (!userMessage.trim()) return;\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setUserMessage(\"\");\n    try {\n      setIsTyping(true);\n      setTypingMessage(\"AI is typing...\");\n      const response = await sendMessage(userMessage);\n      if (response) {\n        setIsTyping(false);\n        setMessages(prev => [...prev, {\n          text: response.response,\n          isUser: false\n        }]);\n      }\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        text: `Error: ${error.message}`,\n        isUser: false\n      }]);\n      setIsTyping(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: [\"Chat with \", botName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 50 : -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), \" \", msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            duration: 0.3,\n            repeat: Infinity\n          },\n          className: \"p-3 bg-gray-600 text-white rounded-lg max-w-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), \" \", typingMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend(),\n          placeholder: \"Type your message...\",\n          className: \"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-2 p-2 bg-blue-500 rounded-full text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"bwf6uRiZQGBRvu1PopKOsWWYveg=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","useNavigate","getMessages","sendMessage","jsxDEV","_jsxDEV","botName","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","typingMessage","setTypingMessage","isTyping","setIsTyping","messagesEndRef","navigate","token","localStorage","getItem","fetchMessages","_messagesEndRef$curre","current","scrollIntoView","behavior","data","formattedMessages","map","msg","text","content","isUser","response","flat","error","console","handleLogout","removeItem","handleSend","trim","prev","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","div","initial","opacity","x","animate","transition","duration","repeat","Infinity","ref","type","value","onChange","e","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/moham/chatGpt/frontend/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getMessages, sendMessage } from \"../services/api\"; // ✅ Import API functions\r\n\r\nconst botName = \"Chatbot\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [typingMessage, setTypingMessage] = useState(\"\"); \r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ Load messages when user logs in\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/\"); // Redirect if no token\r\n    } else {\r\n      fetchMessages(); // Load previous messages\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, typingMessage]);\r\n\r\n  // ✅ Fetch previous messages from backend\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const data = await getMessages();\r\n      const formattedMessages = data.map((msg) => [\r\n        { text: msg.content, isUser: true },\r\n        { text: msg.response, isUser: false },\r\n      ]).flat(); // Flatten to keep proper message order\r\n\r\n      setMessages(formattedMessages);\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\"); // Remove the auth token\r\n    navigate(\"/\"); // Redirect to login page\r\n  };\r\n  \r\n  const handleSend = async () => {\r\n    if (!userMessage.trim()) return;\r\n    setMessages((prev) => [...prev, { text: userMessage, isUser: true }]);\r\n    setUserMessage(\"\"); \r\n\r\n    try {\r\n      setIsTyping(true);\r\n      setTypingMessage(\"AI is typing...\");\r\n\r\n      const response = await sendMessage(userMessage);\r\n\r\n      if (response) {\r\n        setIsTyping(false);\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { text: response.response, isUser: false },\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { text: `Error: ${error.message}`, isUser: false },\r\n      ]);\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\">\r\n      <div className=\"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-center text-2xl font-bold mb-4\">Chat with {botName}</h2>\r\n\r\n                {/*Logout Button */}\r\n                <button\r\n          onClick={handleLogout}\r\n          className=\"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\"\r\n        >\r\n          Logout\r\n        </button>\r\n\r\n\r\n        <div className=\"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\">\r\n          {messages.map((msg, index) => (\r\n            <motion.div\r\n              key={index}\r\n              initial={{ opacity: 0, x: msg.isUser ? 50 : -50 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className={`p-3 rounded-lg max-w-xs ${\r\n                msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"\r\n              }`}\r\n            >\r\n              <strong>{msg.isUser ? \"You\" : botName}:</strong> {msg.text}\r\n            </motion.div>\r\n          ))}\r\n          {isTyping && (\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ duration: 0.3, repeat: Infinity }}\r\n              className=\"p-3 bg-gray-600 text-white rounded-lg max-w-xs\"\r\n            >\r\n              <strong>{botName}:</strong> {typingMessage}\r\n            </motion.div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"flex items-center mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={userMessage}\r\n            onChange={(e) => setUserMessage(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n            placeholder=\"Type your message...\"\r\n            className=\"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\r\n          />\r\n          <button onClick={handleSend} className=\"ml-2 p-2 bg-blue-500 rounded-full text-white\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}