{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\chatGpt\\\\frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\nimport jsPDF from \"jspdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"Streakbot\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [chatId, setChatId] = useState(null);\n  const [chats, setChats] = useState([]);\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n  const [darkMode, setDarkMode] = useState(localStorage.getItem(\"theme\") === \"dark\");\n  const [typingBotMessage, setTypingBotMessage] = useState(null);\n  const dropRef = useRef(null);\n\n  // ✅ Handle image drop\n  const handleDrop = event => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file && file.type.startsWith(\"image/\")) {\n      setMessages(prev => [...prev, {\n        text: `📷 ${file.name}`,\n        isUser: true\n      }]);\n      const botReply = \"Nice image!\";\n      let currentText = \"\";\n      let index = 0;\n      setTypingBotMessage(\"\");\n      const interval = setInterval(() => {\n        if (index < botReply.length) {\n          currentText += botReply[index];\n          setTypingBotMessage(currentText);\n          index++;\n        } else {\n          clearInterval(interval);\n          setMessages(prev => [...prev, {\n            text: botReply,\n            isUser: false\n          }]);\n          setTypingBotMessage(null);\n        }\n      }, 30);\n    }\n  };\n\n  // ✅ Prevent default on drag over\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.setItem(\"theme\", \"light\");\n    }\n  }, [darkMode]);\n  const fetchChats = useCallback(async () => {\n    try {\n      const data = await getChats();\n      if (data.chats.length > 0) {\n        setChats(data.chats);\n        setChatId(data.chats[0].id);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n    }\n  }, []);\n  const fetchMessages = useCallback(async selectedChatId => {\n    try {\n      const data = await getMessages(selectedChatId);\n      const formattedMessages = data.map(msg => [{\n        text: msg.content,\n        isUser: true\n      }, {\n        text: msg.response,\n        isUser: false\n      }]).flat();\n      setMessages(formattedMessages);\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.warn(\"No token found! Redirecting to login...\");\n      navigate(\"/\");\n    } else {\n      fetchChats();\n    }\n  }, [navigate, fetchChats]);\n  useEffect(() => {\n    if (chatId) {\n      fetchMessages(chatId);\n    }\n  }, [chatId, fetchMessages]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, typingBotMessage]);\n  const handleNewChat = async () => {\n    try {\n      const response = await createNewChat();\n      const newChat = {\n        id: response.chat_id\n      };\n      setChats(prevChats => [...prevChats, newChat]);\n      setChatId(newChat.id);\n      setMessages([]);\n    } catch (error) {\n      console.error(\"Error creating new chat:\", error);\n    }\n  };\n  const handleSend = async () => {\n    if (!userMessage.trim() || !chatId) return;\n    const userText = userMessage.trim();\n    setMessages(prev => [...prev, {\n      text: userText,\n      isUser: true\n    }]);\n    setUserMessage(\"\");\n\n    // ✅ Predefined messages logic\n    const lowerMessage = userText.toLowerCase();\n    let botResponse = null;\n    if (lowerMessage === \"hi bot!\") {\n      botResponse = \"Hey , how are you ? It’s been a while since we last talked!\";\n    } else if (lowerMessage === \"what’s our weekly mission ?\" || lowerMessage === \"what's our weekly mission ?\") {\n      botResponse = \"It’s time for an especially exciting challenge! This week, we’re embarking on a delicious and healthy mission: to share as many photos as possible of homemade healthy meals. So who’s ready to become the Health Chef of the week?\";\n    }\n\n    // ✅ If we matched a predefined response\n    if (botResponse) {\n      // Animate the bot typing\n      let fullText = botResponse;\n      let currentText = \"\";\n      let index = 0;\n      setTypingBotMessage(\"\");\n      const interval = setInterval(() => {\n        if (index < fullText.length) {\n          currentText += fullText[index];\n          setTypingBotMessage(currentText);\n          index++;\n        } else {\n          clearInterval(interval);\n          setMessages(prev => [...prev, {\n            text: fullText,\n            isUser: false\n          }]);\n          setTypingBotMessage(null);\n        }\n      }, 30);\n      return;\n    }\n\n    // ❌ If not a predefined response, go to backend\n    try {\n      const response = await sendMessage(chatId, userText);\n      if (response) {\n        let fullText = response.response;\n        let currentText = \"\";\n        let index = 0;\n        setTypingBotMessage(\"\");\n        const interval = setInterval(() => {\n          if (index < fullText.length) {\n            currentText += fullText[index];\n            setTypingBotMessage(currentText);\n            index++;\n          } else {\n            clearInterval(interval);\n            setMessages(prev => [...prev, {\n              text: fullText,\n              isUser: false\n            }]);\n            setTypingBotMessage(null);\n          }\n        }, 30);\n      }\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      setMessages(prev => [...prev, {\n        text: `Error: ${error.message}`,\n        isUser: false\n      }]);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    let y = 10;\n    messages.forEach(msg => {\n      const sender = msg.isUser ? \"You\" : botName;\n      const line = `${sender}: ${msg.text}`;\n      doc.text(line, 10, y);\n      y += 10;\n      if (y > 280) {\n        doc.addPage();\n        y = 10;\n      }\n    });\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center justify-center min-h-screen p-4 \n      ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `max-w-4xl w-full p-6 rounded-lg shadow-lg relative \n        ${darkMode ? \"bg-gray-800\" : \"bg-white\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4 flex items-center justify-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"strike.jpg\",\n          alt: \"Bot Icon\",\n          className: \"w-20 h-20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 3\n        }, this), \"Chat with \", botName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        className: `absolute top-4 left-4 p-2 rounded-lg \n            ${darkMode ? \"bg-gray-200 text-black\" : \"bg-gray-800 text-white\"}`,\n        children: darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportPDF,\n        className: \"absolute top-4 right-28 p-2 bg-yellow-500 text-black rounded-lg\",\n        children: \"Export PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4 mt-8\",\n        children: [chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setChatId(chat.id);\n            fetchMessages(chat.id);\n          },\n          className: `p-2 rounded-lg ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`,\n          children: [\"Chat \", index + 1]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewChat,\n          className: \"p-2 bg-green-500 rounded-lg text-white\",\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-96 overflow-y-auto p-4 space-y-4 rounded-lg \n    ${darkMode ? \"bg-gray-700\" : \"bg-gray-200\"}`,\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        ref: dropRef,\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 50 : -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 7\n          }, this), \" \", msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 5\n        }, this)), typingBotMessage && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: \"p-3 rounded-lg max-w-xs bg-gray-600 text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 7\n          }, this), \" \", typingBotMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend(),\n          placeholder: \"Type your message...\",\n          className: `flex-1 p-3 rounded-lg outline-none \n              ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-2 p-2 bg-blue-500 rounded-full text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"HEUeMYxURLcYbvxinoYqWuHsNL0=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","useNavigate","getChats","createNewChat","getMessages","sendMessage","jsPDF","jsxDEV","_jsxDEV","botName","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","chatId","setChatId","chats","setChats","messagesEndRef","navigate","darkMode","setDarkMode","localStorage","getItem","typingBotMessage","setTypingBotMessage","dropRef","handleDrop","event","preventDefault","file","dataTransfer","files","type","startsWith","prev","text","name","isUser","botReply","currentText","index","interval","setInterval","length","clearInterval","handleDragOver","document","documentElement","classList","add","setItem","remove","fetchChats","data","id","error","console","fetchMessages","selectedChatId","formattedMessages","map","msg","content","response","flat","token","warn","_messagesEndRef$curre","current","scrollIntoView","behavior","handleNewChat","newChat","chat_id","prevChats","handleSend","trim","userText","lowerMessage","toLowerCase","botResponse","fullText","message","handleLogout","removeItem","handleExportPDF","doc","y","forEach","sender","line","addPage","save","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","chat","onDrop","onDragOver","ref","div","initial","opacity","x","animate","transition","duration","value","onChange","e","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/moham/chatGpt/frontend/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\r\nimport jsPDF from \"jspdf\";\r\n\r\nconst botName = \"Streakbot\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [chatId, setChatId] = useState(null);\r\n  const [chats, setChats] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const [darkMode, setDarkMode] = useState(\r\n    localStorage.getItem(\"theme\") === \"dark\"\r\n  );\r\n\r\n  const [typingBotMessage, setTypingBotMessage] = useState(null);\r\n\r\n  const dropRef = useRef(null);\r\n\r\n// ✅ Handle image drop\r\nconst handleDrop = (event) => {\r\n  event.preventDefault();\r\n  const file = event.dataTransfer.files[0];\r\n  if (file && file.type.startsWith(\"image/\")) {\r\n    setMessages((prev) => [...prev, { text: `📷 ${file.name}`, isUser: true }]);\r\n\r\n    const botReply = \"Nice image!\";\r\n    let currentText = \"\";\r\n    let index = 0;\r\n\r\n    setTypingBotMessage(\"\");\r\n\r\n    const interval = setInterval(() => {\r\n      if (index < botReply.length) {\r\n        currentText += botReply[index];\r\n        setTypingBotMessage(currentText);\r\n        index++;\r\n      } else {\r\n        clearInterval(interval);\r\n        setMessages((prev) => [...prev, { text: botReply, isUser: false }]);\r\n        setTypingBotMessage(null);\r\n      }\r\n    }, 30);\r\n  }\r\n};\r\n\r\n// ✅ Prevent default on drag over\r\nconst handleDragOver = (event) => {\r\n  event.preventDefault();\r\n};\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const fetchChats = useCallback(async () => {\r\n    try {\r\n      const data = await getChats();\r\n      if (data.chats.length > 0) {\r\n        setChats(data.chats);\r\n        setChatId(data.chats[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchMessages = useCallback(async (selectedChatId) => {\r\n    try {\r\n      const data = await getMessages(selectedChatId);\r\n      const formattedMessages = data.map((msg) => [\r\n        { text: msg.content, isUser: true },\r\n        { text: msg.response, isUser: false },\r\n      ]).flat();\r\n      setMessages(formattedMessages);\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      console.warn(\"No token found! Redirecting to login...\");\r\n      navigate(\"/\");\r\n    } else {\r\n      fetchChats();\r\n    }\r\n  }, [navigate, fetchChats]);\r\n\r\n  useEffect(() => {\r\n    if (chatId) {\r\n      fetchMessages(chatId);\r\n    }\r\n  }, [chatId, fetchMessages]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, typingBotMessage]);\r\n\r\n  const handleNewChat = async () => {\r\n    try {\r\n      const response = await createNewChat();\r\n      const newChat = { id: response.chat_id };\r\n      setChats((prevChats) => [...prevChats, newChat]);\r\n      setChatId(newChat.id);\r\n      setMessages([]);\r\n    } catch (error) {\r\n      console.error(\"Error creating new chat:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!userMessage.trim() || !chatId) return;\r\n  \r\n    const userText = userMessage.trim();\r\n    setMessages((prev) => [...prev, { text: userText, isUser: true }]);\r\n    setUserMessage(\"\");\r\n  \r\n    // ✅ Predefined messages logic\r\n    const lowerMessage = userText.toLowerCase();\r\n    let botResponse = null;\r\n  \r\n    if (lowerMessage === \"hi bot!\") {\r\n      botResponse = \"Hey , how are you ? It’s been a while since we last talked!\";\r\n    } else if (lowerMessage === \"what’s our weekly mission ?\" || lowerMessage === \"what's our weekly mission ?\") {\r\n      botResponse = \"It’s time for an especially exciting challenge! This week, we’re embarking on a delicious and healthy mission: to share as many photos as possible of homemade healthy meals. So who’s ready to become the Health Chef of the week?\";\r\n    }\r\n  \r\n    // ✅ If we matched a predefined response\r\n    if (botResponse) {\r\n      // Animate the bot typing\r\n      let fullText = botResponse;\r\n      let currentText = \"\";\r\n      let index = 0;\r\n  \r\n      setTypingBotMessage(\"\");\r\n  \r\n      const interval = setInterval(() => {\r\n        if (index < fullText.length) {\r\n          currentText += fullText[index];\r\n          setTypingBotMessage(currentText);\r\n          index++;\r\n        } else {\r\n          clearInterval(interval);\r\n          setMessages((prev) => [...prev, { text: fullText, isUser: false }]);\r\n          setTypingBotMessage(null);\r\n        }\r\n      }, 30);\r\n      return;\r\n    }\r\n  \r\n    // ❌ If not a predefined response, go to backend\r\n    try {\r\n      const response = await sendMessage(chatId, userText);\r\n      if (response) {\r\n        let fullText = response.response;\r\n        let currentText = \"\";\r\n        let index = 0;\r\n  \r\n        setTypingBotMessage(\"\");\r\n  \r\n        const interval = setInterval(() => {\r\n          if (index < fullText.length) {\r\n            currentText += fullText[index];\r\n            setTypingBotMessage(currentText);\r\n            index++;\r\n          } else {\r\n            clearInterval(interval);\r\n            setMessages((prev) => [...prev, { text: fullText, isUser: false }]);\r\n            setTypingBotMessage(null);\r\n          }\r\n        }, 30);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      setMessages((prev) => [...prev, { text: `Error: ${error.message}`, isUser: false }]);\r\n    }\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleExportPDF = () => {\r\n    const doc = new jsPDF();\r\n    let y = 10;\r\n\r\n    messages.forEach((msg) => {\r\n      const sender = msg.isUser ? \"You\" : botName;\r\n      const line = `${sender}: ${msg.text}`;\r\n      doc.text(line, 10, y);\r\n      y += 10;\r\n      if (y > 280) {\r\n        doc.addPage();\r\n        y = 10;\r\n      }\r\n    });\r\n\r\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\r\n  };\r\n\r\n  return (\r\n    <div className={`flex flex-col items-center justify-center min-h-screen p-4 \r\n      ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`}>\r\n\r\n      <div className={`max-w-4xl w-full p-6 rounded-lg shadow-lg relative \r\n        ${darkMode ? \"bg-gray-800\" : \"bg-white\"}`}>\r\n\r\n<h2 className=\"text-center text-2xl font-bold mb-4 flex items-center justify-center gap-2\">\r\n  <img src=\"strike.jpg\" alt=\"Bot Icon\" className=\"w-20 h-20\" />\r\n  Chat with {botName}\r\n</h2>\r\n\r\n\r\n        <button\r\n          onClick={() => setDarkMode(!darkMode)}\r\n          className={`absolute top-4 left-4 p-2 rounded-lg \r\n            ${darkMode ? \"bg-gray-200 text-black\" : \"bg-gray-800 text-white\"}`}\r\n        >\r\n          {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n        </button>\r\n\r\n        <button onClick={handleLogout} className=\"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\">\r\n          Logout\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleExportPDF}\r\n          className=\"absolute top-4 right-28 p-2 bg-yellow-500 text-black rounded-lg\"\r\n        >\r\n          Export PDF\r\n        </button>\r\n\r\n        <div className=\"flex flex-wrap gap-2 mb-4 mt-8\">\r\n          {chats.map((chat, index) => (\r\n            <button\r\n              key={chat.id}\r\n              onClick={() => {\r\n                setChatId(chat.id);\r\n                fetchMessages(chat.id);\r\n              }}\r\n              className={`p-2 rounded-lg ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`}\r\n            >\r\n              Chat {index + 1}\r\n            </button>\r\n          ))}\r\n          <button onClick={handleNewChat} className=\"p-2 bg-green-500 rounded-lg text-white\">\r\n            New Chat\r\n          </button>\r\n        </div>\r\n\r\n        <div\r\n  className={`h-96 overflow-y-auto p-4 space-y-4 rounded-lg \r\n    ${darkMode ? \"bg-gray-700\" : \"bg-gray-200\"}`}\r\n  onDrop={handleDrop}\r\n  onDragOver={handleDragOver}\r\n  ref={dropRef}\r\n>\r\n  {messages.map((msg, index) => (\r\n    <motion.div\r\n      key={index}\r\n      initial={{ opacity: 0, x: msg.isUser ? 50 : -50 }}\r\n      animate={{ opacity: 1, x: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n      className={`p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`}\r\n    >\r\n      <strong>{msg.isUser ? \"You\" : botName}:</strong> {msg.text}\r\n    </motion.div>\r\n  ))}\r\n  {typingBotMessage && (\r\n    <motion.div\r\n      initial={{ opacity: 0, x: -50 }}\r\n      animate={{ opacity: 1, x: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n      className=\"p-3 rounded-lg max-w-xs bg-gray-600 text-white\"\r\n    >\r\n      <strong>{botName}:</strong> {typingBotMessage}\r\n    </motion.div>\r\n  )}\r\n  <div ref={messagesEndRef} />\r\n</div>\r\n\r\n\r\n        <div className=\"flex items-center mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={userMessage}\r\n            onChange={(e) => setUserMessage(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n            placeholder=\"Type your message...\"\r\n            className={`flex-1 p-3 rounded-lg outline-none \r\n              ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`}\r\n          />\r\n\r\n          <button onClick={handleSend} className=\"ml-2 p-2 bg-blue-500 rounded-full text-white\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,aAAa,EAAEC,WAAW,EAAEC,WAAW,QAAQ,iBAAiB;AACnF,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG,WAAW;AAE3B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMwB,cAAc,GAAGtB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMuB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CACtC4B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,MACpC,CAAC;EAED,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMgC,OAAO,GAAG9B,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA,MAAM+B,UAAU,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,IAAI,GAAGF,KAAK,CAACG,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;MAC1CvB,WAAW,CAAEwB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAE,MAAMN,IAAI,CAACO,IAAI,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAC,CAAC,CAAC;MAE3E,MAAMC,QAAQ,GAAG,aAAa;MAC9B,IAAIC,WAAW,GAAG,EAAE;MACpB,IAAIC,KAAK,GAAG,CAAC;MAEbhB,mBAAmB,CAAC,EAAE,CAAC;MAEvB,MAAMiB,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjC,IAAIF,KAAK,GAAGF,QAAQ,CAACK,MAAM,EAAE;UAC3BJ,WAAW,IAAID,QAAQ,CAACE,KAAK,CAAC;UAC9BhB,mBAAmB,CAACe,WAAW,CAAC;UAChCC,KAAK,EAAE;QACT,CAAC,MAAM;UACLI,aAAa,CAACH,QAAQ,CAAC;UACvB/B,WAAW,CAAEwB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;YAAEC,IAAI,EAAEG,QAAQ;YAAED,MAAM,EAAE;UAAM,CAAC,CAAC,CAAC;UACnEb,mBAAmB,CAAC,IAAI,CAAC;QAC3B;MACF,CAAC,EAAE,EAAE,CAAC;IACR;EACF,CAAC;;EAED;EACA,MAAMqB,cAAc,GAAIlB,KAAK,IAAK;IAChCA,KAAK,CAACC,cAAc,CAAC,CAAC;EACxB,CAAC;EAEClC,SAAS,CAAC,MAAM;IACd,IAAIyB,QAAQ,EAAE;MACZ2B,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC9C5B,YAAY,CAAC6B,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLJ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC;MACjD9B,YAAY,CAAC6B,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC,EAAE,CAAC/B,QAAQ,CAAC,CAAC;EAEd,MAAMiC,UAAU,GAAGxD,WAAW,CAAC,YAAY;IACzC,IAAI;MACF,MAAMyD,IAAI,GAAG,MAAMtD,QAAQ,CAAC,CAAC;MAC7B,IAAIsD,IAAI,CAACtC,KAAK,CAAC4B,MAAM,GAAG,CAAC,EAAE;QACzB3B,QAAQ,CAACqC,IAAI,CAACtC,KAAK,CAAC;QACpBD,SAAS,CAACuC,IAAI,CAACtC,KAAK,CAAC,CAAC,CAAC,CAACuC,EAAE,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAG7D,WAAW,CAAC,MAAO8D,cAAc,IAAK;IAC1D,IAAI;MACF,MAAML,IAAI,GAAG,MAAMpD,WAAW,CAACyD,cAAc,CAAC;MAC9C,MAAMC,iBAAiB,GAAGN,IAAI,CAACO,GAAG,CAAEC,GAAG,IAAK,CAC1C;QAAE1B,IAAI,EAAE0B,GAAG,CAACC,OAAO;QAAEzB,MAAM,EAAE;MAAK,CAAC,EACnC;QAAEF,IAAI,EAAE0B,GAAG,CAACE,QAAQ;QAAE1B,MAAM,EAAE;MAAM,CAAC,CACtC,CAAC,CAAC2B,IAAI,CAAC,CAAC;MACTtD,WAAW,CAACiD,iBAAiB,CAAC;IAChC,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN7D,SAAS,CAAC,MAAM;IACd,MAAMuE,KAAK,GAAG5C,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAAC2C,KAAK,EAAE;MACVT,OAAO,CAACU,IAAI,CAAC,yCAAyC,CAAC;MACvDhD,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACLkC,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAAClC,QAAQ,EAAEkC,UAAU,CAAC,CAAC;EAE1B1D,SAAS,CAAC,MAAM;IACd,IAAImB,MAAM,EAAE;MACV4C,aAAa,CAAC5C,MAAM,CAAC;IACvB;EACF,CAAC,EAAE,CAACA,MAAM,EAAE4C,aAAa,CAAC,CAAC;EAE3B/D,SAAS,CAAC,MAAM;IAAA,IAAAyE,qBAAA;IACd,CAAAA,qBAAA,GAAAlD,cAAc,CAACmD,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAAC7D,QAAQ,EAAEc,gBAAgB,CAAC,CAAC;EAEhC,MAAMgD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAM/D,aAAa,CAAC,CAAC;MACtC,MAAMwE,OAAO,GAAG;QAAElB,EAAE,EAAES,QAAQ,CAACU;MAAQ,CAAC;MACxCzD,QAAQ,CAAE0D,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEF,OAAO,CAAC,CAAC;MAChD1D,SAAS,CAAC0D,OAAO,CAAClB,EAAE,CAAC;MACrB5C,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,OAAO6C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAChE,WAAW,CAACiE,IAAI,CAAC,CAAC,IAAI,CAAC/D,MAAM,EAAE;IAEpC,MAAMgE,QAAQ,GAAGlE,WAAW,CAACiE,IAAI,CAAC,CAAC;IACnClE,WAAW,CAAEwB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE0C,QAAQ;MAAExC,MAAM,EAAE;IAAK,CAAC,CAAC,CAAC;IAClEzB,cAAc,CAAC,EAAE,CAAC;;IAElB;IACA,MAAMkE,YAAY,GAAGD,QAAQ,CAACE,WAAW,CAAC,CAAC;IAC3C,IAAIC,WAAW,GAAG,IAAI;IAEtB,IAAIF,YAAY,KAAK,SAAS,EAAE;MAC9BE,WAAW,GAAG,6DAA6D;IAC7E,CAAC,MAAM,IAAIF,YAAY,KAAK,6BAA6B,IAAIA,YAAY,KAAK,6BAA6B,EAAE;MAC3GE,WAAW,GAAG,qOAAqO;IACrP;;IAEA;IACA,IAAIA,WAAW,EAAE;MACf;MACA,IAAIC,QAAQ,GAAGD,WAAW;MAC1B,IAAIzC,WAAW,GAAG,EAAE;MACpB,IAAIC,KAAK,GAAG,CAAC;MAEbhB,mBAAmB,CAAC,EAAE,CAAC;MAEvB,MAAMiB,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjC,IAAIF,KAAK,GAAGyC,QAAQ,CAACtC,MAAM,EAAE;UAC3BJ,WAAW,IAAI0C,QAAQ,CAACzC,KAAK,CAAC;UAC9BhB,mBAAmB,CAACe,WAAW,CAAC;UAChCC,KAAK,EAAE;QACT,CAAC,MAAM;UACLI,aAAa,CAACH,QAAQ,CAAC;UACvB/B,WAAW,CAAEwB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;YAAEC,IAAI,EAAE8C,QAAQ;YAAE5C,MAAM,EAAE;UAAM,CAAC,CAAC,CAAC;UACnEb,mBAAmB,CAAC,IAAI,CAAC;QAC3B;MACF,CAAC,EAAE,EAAE,CAAC;MACN;IACF;;IAEA;IACA,IAAI;MACF,MAAMuC,QAAQ,GAAG,MAAM7D,WAAW,CAACW,MAAM,EAAEgE,QAAQ,CAAC;MACpD,IAAId,QAAQ,EAAE;QACZ,IAAIkB,QAAQ,GAAGlB,QAAQ,CAACA,QAAQ;QAChC,IAAIxB,WAAW,GAAG,EAAE;QACpB,IAAIC,KAAK,GAAG,CAAC;QAEbhB,mBAAmB,CAAC,EAAE,CAAC;QAEvB,MAAMiB,QAAQ,GAAGC,WAAW,CAAC,MAAM;UACjC,IAAIF,KAAK,GAAGyC,QAAQ,CAACtC,MAAM,EAAE;YAC3BJ,WAAW,IAAI0C,QAAQ,CAACzC,KAAK,CAAC;YAC9BhB,mBAAmB,CAACe,WAAW,CAAC;YAChCC,KAAK,EAAE;UACT,CAAC,MAAM;YACLI,aAAa,CAACH,QAAQ,CAAC;YACvB/B,WAAW,CAAEwB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;cAAEC,IAAI,EAAE8C,QAAQ;cAAE5C,MAAM,EAAE;YAAM,CAAC,CAAC,CAAC;YACnEb,mBAAmB,CAAC,IAAI,CAAC;UAC3B;QACF,CAAC,EAAE,EAAE,CAAC;MACR;IACF,CAAC,CAAC,OAAO+B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C7C,WAAW,CAAEwB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAE,UAAUoB,KAAK,CAAC2B,OAAO,EAAE;QAAE7C,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;IACtF;EACF,CAAC;EAED,MAAM8C,YAAY,GAAGA,CAAA,KAAM;IACzB9D,YAAY,CAAC+D,UAAU,CAAC,OAAO,CAAC;IAChClE,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMmE,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,GAAG,GAAG,IAAInF,KAAK,CAAC,CAAC;IACvB,IAAIoF,CAAC,GAAG,EAAE;IAEV9E,QAAQ,CAAC+E,OAAO,CAAE3B,GAAG,IAAK;MACxB,MAAM4B,MAAM,GAAG5B,GAAG,CAACxB,MAAM,GAAG,KAAK,GAAG/B,OAAO;MAC3C,MAAMoF,IAAI,GAAG,GAAGD,MAAM,KAAK5B,GAAG,CAAC1B,IAAI,EAAE;MACrCmD,GAAG,CAACnD,IAAI,CAACuD,IAAI,EAAE,EAAE,EAAEH,CAAC,CAAC;MACrBA,CAAC,IAAI,EAAE;MACP,IAAIA,CAAC,GAAG,GAAG,EAAE;QACXD,GAAG,CAACK,OAAO,CAAC,CAAC;QACbJ,CAAC,GAAG,EAAE;MACR;IACF,CAAC,CAAC;IAEFD,GAAG,CAACM,IAAI,CAAC,QAAQ/E,MAAM,IAAI,QAAQ,MAAM,CAAC;EAC5C,CAAC;EAED,oBACER,OAAA;IAAKwF,SAAS,EAAE;AACpB,QAAQ1E,QAAQ,GAAG,wBAAwB,GAAG,wBAAwB,EAAG;IAAA2E,QAAA,eAEnEzF,OAAA;MAAKwF,SAAS,EAAE;AACtB,UAAU1E,QAAQ,GAAG,aAAa,GAAG,UAAU,EAAG;MAAA2E,QAAA,gBAElDzF,OAAA;QAAIwF,SAAS,EAAC,4EAA4E;QAAAC,QAAA,gBACxFzF,OAAA;UAAK0F,GAAG,EAAC,YAAY;UAACC,GAAG,EAAC,UAAU;UAACH,SAAS,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,cACnD,EAAC9F,OAAO;MAAA;QAAA2F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eAGG/F,OAAA;QACEgG,OAAO,EAAEA,CAAA,KAAMjF,WAAW,CAAC,CAACD,QAAQ,CAAE;QACtC0E,SAAS,EAAE;AACrB,cAAc1E,QAAQ,GAAG,wBAAwB,GAAG,wBAAwB,EAAG;QAAA2E,QAAA,EAEpE3E,QAAQ,GAAG,eAAe,GAAG;MAAc;QAAA8E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eAET/F,OAAA;QAAQgG,OAAO,EAAElB,YAAa;QAACU,SAAS,EAAC,6DAA6D;QAAAC,QAAA,EAAC;MAEvG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAET/F,OAAA;QACEgG,OAAO,EAAEhB,eAAgB;QACzBQ,SAAS,EAAC,iEAAiE;QAAAC,QAAA,EAC5E;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAET/F,OAAA;QAAKwF,SAAS,EAAC,gCAAgC;QAAAC,QAAA,GAC5C/E,KAAK,CAAC6C,GAAG,CAAC,CAAC0C,IAAI,EAAE9D,KAAK,kBACrBnC,OAAA;UAEEgG,OAAO,EAAEA,CAAA,KAAM;YACbvF,SAAS,CAACwF,IAAI,CAAChD,EAAE,CAAC;YAClBG,aAAa,CAAC6C,IAAI,CAAChD,EAAE,CAAC;UACxB,CAAE;UACFuC,SAAS,EAAE,kBAAkBS,IAAI,CAAChD,EAAE,KAAKzC,MAAM,GAAG,wBAAwB,GAAG,wBAAwB,EAAG;UAAAiF,QAAA,GACzG,OACM,EAACtD,KAAK,GAAG,CAAC;QAAA,GAPV8D,IAAI,CAAChD,EAAE;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQN,CACT,CAAC,eACF/F,OAAA;UAAQgG,OAAO,EAAE9B,aAAc;UAACsB,SAAS,EAAC,wCAAwC;UAAAC,QAAA,EAAC;QAEnF;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN/F,OAAA;QACNwF,SAAS,EAAE;AACb,MAAM1E,QAAQ,GAAG,aAAa,GAAG,aAAa,EAAG;QAC/CoF,MAAM,EAAE7E,UAAW;QACnB8E,UAAU,EAAE3D,cAAe;QAC3B4D,GAAG,EAAEhF,OAAQ;QAAAqE,QAAA,GAEZrF,QAAQ,CAACmD,GAAG,CAAC,CAACC,GAAG,EAAErB,KAAK,kBACvBnC,OAAA,CAACR,MAAM,CAAC6G,GAAG;UAETC,OAAO,EAAE;YAAEC,OAAO,EAAE,CAAC;YAAEC,CAAC,EAAEhD,GAAG,CAACxB,MAAM,GAAG,EAAE,GAAG,CAAC;UAAG,CAAE;UAClDyE,OAAO,EAAE;YAAEF,OAAO,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAE,CAAE;UAC9BE,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAI,CAAE;UAC9BnB,SAAS,EAAE,2BAA2BhC,GAAG,CAACxB,MAAM,GAAG,gCAAgC,GAAG,wBAAwB,EAAG;UAAAyD,QAAA,gBAEjHzF,OAAA;YAAAyF,QAAA,GAASjC,GAAG,CAACxB,MAAM,GAAG,KAAK,GAAG/B,OAAO,EAAC,GAAC;UAAA;YAAA2F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACvC,GAAG,CAAC1B,IAAI;QAAA,GANrDK,KAAK;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOA,CACb,CAAC,EACD7E,gBAAgB,iBACflB,OAAA,CAACR,MAAM,CAAC6G,GAAG;UACTC,OAAO,EAAE;YAAEC,OAAO,EAAE,CAAC;YAAEC,CAAC,EAAE,CAAC;UAAG,CAAE;UAChCC,OAAO,EAAE;YAAEF,OAAO,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAE,CAAE;UAC9BE,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAI,CAAE;UAC9BnB,SAAS,EAAC,gDAAgD;UAAAC,QAAA,gBAE1DzF,OAAA;YAAAyF,QAAA,GAASxF,OAAO,EAAC,GAAC;UAAA;YAAA2F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC7E,gBAAgB;QAAA;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CACb,eACD/F,OAAA;UAAKoG,GAAG,EAAExF;QAAe;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eAGE/F,OAAA;QAAKwF,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCzF,OAAA;UACE2B,IAAI,EAAC,MAAM;UACXiF,KAAK,EAAEtG,WAAY;UACnBuG,QAAQ,EAAGC,CAAC,IAAKvG,cAAc,CAACuG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAChDI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI3C,UAAU,CAAC,CAAE;UACpD4C,WAAW,EAAC,sBAAsB;UAClC1B,SAAS,EAAE;AACvB,gBAAgB1E,QAAQ,GAAG,wBAAwB,GAAG,qBAAqB;QAAG;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,eAEF/F,OAAA;UAAQgG,OAAO,EAAE1B,UAAW;UAACkB,SAAS,EAAC,8CAA8C;UAAAC,QAAA,EAAC;QAEtF;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5F,EAAA,CAlTID,OAAO;EAAA,QAMMT,WAAW;AAAA;AAAA0H,EAAA,GANxBjH,OAAO;AAoTb,eAAeA,OAAO;AAAC,IAAAiH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}