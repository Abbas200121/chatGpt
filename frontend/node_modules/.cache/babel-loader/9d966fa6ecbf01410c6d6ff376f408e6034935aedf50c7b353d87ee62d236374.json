{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://127.0.0.1:8000\"; // FastAPI backend URL\n\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem(\"token\");\n  return token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n};\nexport const signup = async (email, password) => {\n  const response = await axios.post(`${BASE_URL}/signup`, {\n    email,\n    password\n  });\n  localStorage.setItem(\"token\", response.data.token);\n  return response.data.token;\n};\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/login`, {\n      email,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    localStorage.setItem(\"token\", response.data.token);\n    return response.data.token;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Login error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// ✅ Create a new chat session\nexport const createNewChat = async () => {\n  const response = await axios.post(`${BASE_URL}/chats/new`, {}, {\n    headers: getAuthHeaders()\n  });\n  return response.data.chat_id;\n};\n\n// ✅ Fetch all chats for the user\nexport const getUserChats = async () => {\n  const response = await axios.get(`${BASE_URL}/chats`, {\n    headers: getAuthHeaders()\n  });\n  return response.data.chats;\n};\n\n// ✅ Send a message in a specific chat\nexport const sendMessage = async (chatId, message) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/chats/${chatId}/send`, {\n      content: message\n    }, {\n      headers: getAuthHeaders()\n    });\n    return response.data.message;\n  } catch (error) {\n    console.error(\"Error sending message:\", error);\n    return {\n      response: \"Server error, please try again!\"\n    };\n  }\n};\n\n// ✅ Fetch messages for a specific chat\nexport const getChatMessages = async chatId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/chats/${chatId}/messages`, {\n      headers: getAuthHeaders()\n    });\n    return response.data.messages;\n  } catch (error) {\n    console.error(\"Error fetching messages:\", error);\n    return [];\n  }\n};\n\n// ✅ Logout function (clear token)\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  window.location.href = \"/\";\n};","map":{"version":3,"names":["axios","BASE_URL","getAuthHeaders","token","localStorage","getItem","Authorization","signup","email","password","response","post","setItem","data","login","headers","error","_error$response","console","message","createNewChat","chat_id","getUserChats","get","chats","sendMessage","chatId","content","getChatMessages","messages","logout","removeItem","window","location","href"],"sources":["C:/Users/moham/chatGpt/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://127.0.0.1:8000\"; // FastAPI backend URL\r\n\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return token ? { Authorization: `Bearer ${token}` } : {};\r\n};\r\n\r\nexport const signup = async (email, password) => {\r\n  const response = await axios.post(`${BASE_URL}/signup`, { email, password });\r\n  localStorage.setItem(\"token\", response.data.token);\r\n  return response.data.token;\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${BASE_URL}/login`,\r\n      { email, password },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    localStorage.setItem(\"token\", response.data.token);\r\n    return response.data.token;\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n// ✅ Create a new chat session\r\nexport const createNewChat = async () => {\r\n  const response = await axios.post(`${BASE_URL}/chats/new`, {}, { headers: getAuthHeaders() });\r\n  return response.data.chat_id;\r\n};\r\n\r\n// ✅ Fetch all chats for the user\r\nexport const getUserChats = async () => {\r\n  const response = await axios.get(`${BASE_URL}/chats`, { headers: getAuthHeaders() });\r\n  return response.data.chats;\r\n};\r\n\r\n// ✅ Send a message in a specific chat\r\nexport const sendMessage = async (chatId, message) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${BASE_URL}/chats/${chatId}/send`,\r\n      { content: message },\r\n      { headers: getAuthHeaders() }\r\n    );\r\n    return response.data.message;\r\n  } catch (error) {\r\n    console.error(\"Error sending message:\", error);\r\n    return { response: \"Server error, please try again!\" };\r\n  }\r\n};\r\n\r\n// ✅ Fetch messages for a specific chat\r\nexport const getChatMessages = async (chatId) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/chats/${chatId}/messages`, { headers: getAuthHeaders() });\r\n    return response.data.messages;\r\n  } catch (error) {\r\n    console.error(\"Error fetching messages:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// ✅ Logout function (clear token)\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  window.location.href = \"/\";\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}