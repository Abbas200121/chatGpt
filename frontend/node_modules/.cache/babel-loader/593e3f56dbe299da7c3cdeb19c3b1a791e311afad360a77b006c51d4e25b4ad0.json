{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\message-app\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { sendMessage } from \"../services/api\"; // Import API call function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to latest message\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Speech synthesis function\n  const speak = text => {\n    if (\"speechSynthesis\" in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      speechSynthesis.speak(utterance);\n    }\n  };\n\n  // Function to handle user sending a message\n  const handleSend = async () => {\n    if (!userMessage.trim()) return;\n\n    // Add user message to chat\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setUserMessage(\"\");\n\n    // Simulate \"Typing...\"\n    setIsTyping(true);\n    try {\n      // Send message to backend and get response\n      const response = await sendMessage(userMessage);\n      if (response && response.response) {\n        setIsTyping(false); // Remove typing indicator before displaying AI response\n\n        // Typing animation for AI response\n        let index = 0;\n        const fullResponse = response.response;\n        setMessages(prev => [...prev, {\n          text: \"\",\n          isUser: false\n        }]);\n        const typingInterval = setInterval(() => {\n          setMessages(prev => {\n            const newMessages = [...prev];\n            newMessages[newMessages.length - 1] = {\n              text: fullResponse.substring(0, index + 1),\n              isUser: false\n            };\n            return newMessages;\n          });\n          index++;\n          if (index >= fullResponse.length) {\n            clearInterval(typingInterval);\n            speak(fullResponse);\n          }\n        }, 50);\n      } else {\n        setMessages(prev => [...prev, {\n          text: \"Error getting AI response\",\n          isUser: false\n        }]);\n        setIsTyping(false);\n      }\n    } catch (error) {\n      console.error(\"Error fetching AI response:\", error);\n      setMessages(prev => [...prev, {\n        text: \"Server error, please try again!\",\n        isUser: false\n      }]);\n      setIsTyping(false);\n    }\n  };\n\n  // Handle Enter key to send message\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: \"ChatGPT AI Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 50 : -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : \"AI\", \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), \" \", msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            duration: 0.5,\n            repeat: Infinity\n          },\n          className: \"p-3 bg-gray-600 text-white rounded-lg max-w-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"AI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), \" Typing...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"Type your message...\",\n          className: \"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-2 p-2 bg-blue-500 rounded-full text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"Tt5JZtOIvIzK/O8x11xBcNU8duA=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","sendMessage","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","isTyping","setIsTyping","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","speak","text","window","utterance","SpeechSynthesisUtterance","speechSynthesis","handleSend","trim","prev","isUser","response","index","fullResponse","typingInterval","setInterval","newMessages","length","substring","clearInterval","error","console","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","div","initial","opacity","x","animate","transition","duration","repeat","Infinity","ref","type","value","onChange","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moham/message-app/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { sendMessage } from \"../services/api\"; // Import API call function\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Scroll to latest message\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // Speech synthesis function\r\n  const speak = (text) => {\r\n    if (\"speechSynthesis\" in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  // Function to handle user sending a message\r\n  const handleSend = async () => {\r\n    if (!userMessage.trim()) return;\r\n\r\n    // Add user message to chat\r\n    setMessages((prev) => [...prev, { text: userMessage, isUser: true }]);\r\n    setUserMessage(\"\");\r\n\r\n    // Simulate \"Typing...\"\r\n    setIsTyping(true);\r\n\r\n    try {\r\n      // Send message to backend and get response\r\n      const response = await sendMessage(userMessage);\r\n\r\n      if (response && response.response) {\r\n        setIsTyping(false); // Remove typing indicator before displaying AI response\r\n\r\n        // Typing animation for AI response\r\n        let index = 0;\r\n        const fullResponse = response.response;\r\n\r\n        setMessages((prev) => [...prev, { text: \"\", isUser: false }]);\r\n\r\n        const typingInterval = setInterval(() => {\r\n          setMessages((prev) => {\r\n            const newMessages = [...prev];\r\n            newMessages[newMessages.length - 1] = {\r\n              text: fullResponse.substring(0, index + 1),\r\n              isUser: false,\r\n            };\r\n            return newMessages;\r\n          });\r\n\r\n          index++;\r\n          if (index >= fullResponse.length) {\r\n            clearInterval(typingInterval);\r\n            speak(fullResponse);\r\n          }\r\n        }, 50);\r\n      } else {\r\n        setMessages((prev) => [...prev, { text: \"Error getting AI response\", isUser: false }]);\r\n        setIsTyping(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching AI response:\", error);\r\n      setMessages((prev) => [...prev, { text: \"Server error, please try again!\", isUser: false }]);\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  // Handle Enter key to send message\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\">\r\n      <div className=\"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-center text-2xl font-bold mb-4\">ChatGPT AI Chat</h2>\r\n\r\n        <div className=\"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\">\r\n          {messages.map((msg, index) => (\r\n            <motion.div\r\n              key={index}\r\n              initial={{ opacity: 0, x: msg.isUser ? 50 : -50 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className={`p-3 rounded-lg max-w-xs ${\r\n                msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"\r\n              }`}\r\n            >\r\n              <strong>{msg.isUser ? \"You\" : \"AI\"}:</strong> {msg.text}\r\n            </motion.div>\r\n          ))}\r\n\r\n          {isTyping && (\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ duration: 0.5, repeat: Infinity }}\r\n              className=\"p-3 bg-gray-600 text-white rounded-lg max-w-xs\"\r\n            >\r\n              <strong>AI:</strong> Typing...\r\n            </motion.div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"flex items-center mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={userMessage}\r\n            onChange={(e) => setUserMessage(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"Type your message...\"\r\n            className=\"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\r\n          />\r\n          <button onClick={handleSend} className=\"ml-2 p-2 bg-blue-500 rounded-full text-white\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}