{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\message-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { PaperAirplaneIcon } from \"@heroicons/react/24/solid\";\nimport MessageForm from \"./components/MessageForm\";\nimport MessageList from \"./components/MessageList\";\nimport { sendMessage } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleSend = async message => {\n    setMessages(prev => [...prev, {\n      text: message,\n      isUser: true\n    }]);\n    const response = await sendMessage(message);\n    if (response && response.response) {\n      setMessages(prev => [...prev, {\n        text: response.response,\n        isUser: false\n      }]);\n    } else {\n      setMessages(prev => [...prev, {\n        text: \"Error: No AI response\",\n        isUser: false\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-900 text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        scale: 0.9\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      transition: {\n        duration: 0.5\n      },\n      className: \"max-w-2xl w-full bg-gray-800 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: \"ChatGPT AI Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","motion","PaperAirplaneIcon","MessageForm","MessageList","sendMessage","jsxDEV","_jsxDEV","App","_s","messages","setMessages","handleSend","message","prev","text","isUser","response","className","children","div","initial","opacity","scale","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","onSend","_c","$RefreshReg$"],"sources":["C:/Users/moham/message-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { PaperAirplaneIcon } from \"@heroicons/react/24/solid\";\nimport MessageForm from \"./components/MessageForm\";\nimport MessageList from \"./components/MessageList\";\nimport { sendMessage } from \"./services/api\";\n\n\n\n\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n\n  const handleSend = async (message) => {\n    setMessages((prev) => [...prev, { text: message, isUser: true }]);\n    const response = await sendMessage(message);\n\n    if (response && response.response) {\n      setMessages((prev) => [...prev, { text: response.response, isUser: false }]);\n    } else {\n      setMessages((prev) => [...prev, { text: \"Error: No AI response\", isUser: false }]);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-900 text-white p-4\">\n      <motion.div\n        initial={{ opacity: 0, scale: 0.9 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.5 }}\n        className=\"max-w-2xl w-full bg-gray-800 p-6 rounded-lg shadow-lg\"\n      >\n        <h2 className=\"text-center text-2xl font-bold mb-4\">ChatGPT AI Chat</h2>\n        <MessageList messages={messages} />\n        <MessageForm onSend={handleSend} />\n      </motion.div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,UAAU,GAAG,MAAOC,OAAO,IAAK;IACpCF,WAAW,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAEF,OAAO;MAAEG,MAAM,EAAE;IAAK,CAAC,CAAC,CAAC;IACjE,MAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAACQ,OAAO,CAAC;IAE3C,IAAII,QAAQ,IAAIA,QAAQ,CAACA,QAAQ,EAAE;MACjCN,WAAW,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAEE,QAAQ,CAACA,QAAQ;QAAED,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;IAC9E,CAAC,MAAM;MACLL,WAAW,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAE,uBAAuB;QAAEC,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;IACpF;EACF,CAAC;EAED,oBACET,OAAA;IAAKW,SAAS,EAAC,0EAA0E;IAAAC,QAAA,eACvFZ,OAAA,CAACN,MAAM,CAACmB,GAAG;MACTC,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAE;MACpCC,OAAO,EAAE;QAAEF,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAE,CAAE;MAClCE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAC9BR,SAAS,EAAC,uDAAuD;MAAAC,QAAA,gBAEjEZ,OAAA;QAAIW,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAC;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxEvB,OAAA,CAACH,WAAW;QAACM,QAAQ,EAAEA;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCvB,OAAA,CAACJ,WAAW;QAAC4B,MAAM,EAAEnB;MAAW;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACrB,EAAA,CA5BID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}