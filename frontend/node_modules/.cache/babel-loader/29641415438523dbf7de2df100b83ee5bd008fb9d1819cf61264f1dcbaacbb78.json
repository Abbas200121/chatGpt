{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\message-app\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\n\n// Chatbot name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"Chatbot\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to latest message\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Speech synthesis function\n  const speak = text => {\n    if (\"speechSynthesis\" in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      speechSynthesis.speak(utterance);\n    }\n  };\n\n  // Function to generate chatbot response\n  const chatbotResponse = input => {\n    let botMessage = \"I'm confused\";\n    if (input.toLowerCase() === \"hi\" || input.toLowerCase() === \"hello\") {\n      const greetings = [\"Hi!\", \"Howdy!\", \"Hello!\"];\n      botMessage = greetings[Math.floor(Math.random() * greetings.length)];\n    } else if (input.toLowerCase() === \"name\") {\n      botMessage = `My name is ${botName}.`;\n    }\n    return botMessage;\n  };\n\n  // Function to handle user sending a message\n  const handleSend = () => {\n    if (!userMessage.trim()) return;\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setUserMessage(\"\");\n\n    // Simulate \"Typing...\"\n    setIsTyping(true);\n    setTimeout(() => {\n      setIsTyping(false);\n      const response = chatbotResponse(userMessage);\n\n      // Type AI response letter by letter\n      let index = 0;\n      const interval = setInterval(() => {\n        setMessages(prev => [...prev.slice(0, -1), {\n          text: response.substring(0, index + 1),\n          isUser: false\n        }]);\n        index++;\n        if (index >= response.length) {\n          clearInterval(interval);\n          speak(response);\n        }\n      }, 50);\n\n      // Add empty message before AI starts typing\n      setMessages(prev => [...prev, {\n        text: \"\",\n        isUser: false\n      }]);\n    }, 1000);\n  };\n\n  // Handle Enter key\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: [\"Chat with \", botName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 50 : -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), \" \", msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            duration: 0.5,\n            repeat: Infinity\n          },\n          className: \"p-3 bg-gray-600 text-white rounded-lg max-w-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), \" Typing...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"Type your message...\",\n          className: \"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-2 p-2 bg-blue-500 rounded-full text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"Tt5JZtOIvIzK/O8x11xBcNU8duA=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","jsxDEV","_jsxDEV","botName","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","isTyping","setIsTyping","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","speak","text","window","utterance","SpeechSynthesisUtterance","speechSynthesis","chatbotResponse","input","botMessage","toLowerCase","greetings","Math","floor","random","length","handleSend","trim","prev","isUser","setTimeout","response","index","interval","setInterval","slice","substring","clearInterval","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","div","initial","opacity","x","animate","transition","duration","repeat","Infinity","ref","type","value","onChange","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moham/message-app/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n// Chatbot name\r\nconst botName = \"Chatbot\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Scroll to latest message\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // Speech synthesis function\r\n  const speak = (text) => {\r\n    if (\"speechSynthesis\" in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  // Function to generate chatbot response\r\n  const chatbotResponse = (input) => {\r\n    let botMessage = \"I'm confused\";\r\n\r\n    if (input.toLowerCase() === \"hi\" || input.toLowerCase() === \"hello\") {\r\n      const greetings = [\"Hi!\", \"Howdy!\", \"Hello!\"];\r\n      botMessage = greetings[Math.floor(Math.random() * greetings.length)];\r\n    } else if (input.toLowerCase() === \"name\") {\r\n      botMessage = `My name is ${botName}.`;\r\n    }\r\n\r\n    return botMessage;\r\n  };\r\n\r\n  // Function to handle user sending a message\r\n  const handleSend = () => {\r\n    if (!userMessage.trim()) return;\r\n\r\n    // Add user message\r\n    setMessages((prev) => [...prev, { text: userMessage, isUser: true }]);\r\n    setUserMessage(\"\");\r\n\r\n    // Simulate \"Typing...\"\r\n    setIsTyping(true);\r\n    setTimeout(() => {\r\n      setIsTyping(false);\r\n\r\n      const response = chatbotResponse(userMessage);\r\n\r\n      // Type AI response letter by letter\r\n      let index = 0;\r\n      const interval = setInterval(() => {\r\n        setMessages((prev) => [\r\n          ...prev.slice(0, -1),\r\n          { text: response.substring(0, index + 1), isUser: false },\r\n        ]);\r\n        index++;\r\n        if (index >= response.length) {\r\n          clearInterval(interval);\r\n          speak(response);\r\n        }\r\n      }, 50);\r\n      \r\n      // Add empty message before AI starts typing\r\n      setMessages((prev) => [...prev, { text: \"\", isUser: false }]);\r\n    }, 1000);\r\n  };\r\n\r\n  // Handle Enter key\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\">\r\n      <div className=\"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-center text-2xl font-bold mb-4\">Chat with {botName}</h2>\r\n\r\n        <div className=\"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\">\r\n          {messages.map((msg, index) => (\r\n            <motion.div\r\n              key={index}\r\n              initial={{ opacity: 0, x: msg.isUser ? 50 : -50 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className={`p-3 rounded-lg max-w-xs ${\r\n                msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"\r\n              }`}\r\n            >\r\n              <strong>{msg.isUser ? \"You\" : botName}:</strong> {msg.text}\r\n            </motion.div>\r\n          ))}\r\n          {isTyping && (\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ duration: 0.5, repeat: Infinity }}\r\n              className=\"p-3 bg-gray-600 text-white rounded-lg max-w-xs\"\r\n            >\r\n              <strong>{botName}:</strong> Typing...\r\n            </motion.div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"flex items-center mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={userMessage}\r\n            onChange={(e) => setUserMessage(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"Type your message...\"\r\n            className=\"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\r\n          />\r\n          <button onClick={handleSend} className=\"ml-2 p-2 bg-blue-500 rounded-full text-white\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}