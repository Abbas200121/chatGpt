{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\chatGpt\\\\frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\nimport jsPDF from \"jspdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"Streakbot\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [chatId, setChatId] = useState(null);\n  const [chats, setChats] = useState([]);\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n  const [darkMode, setDarkMode] = useState(localStorage.getItem(\"theme\") === \"dark\");\n  const [typingBotMessage, setTypingBotMessage] = useState(null);\n  const dropRef = useRef(null);\n  const handleDrop = event => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file && file.type.startsWith(\"image/\")) {\n      const imageUrl = URL.createObjectURL(file);\n      setMessages(prev => [...prev, {\n        text: `📷 ${file.name}`,\n        isUser: true,\n        imageUrl\n      }]);\n      const botReply = \"A colorful picture of fruits was spotted, well done! You’ve earned 6 points\";\n      let currentText = \"\";\n      let index = 0;\n      setTypingBotMessage(\"\");\n      const interval = setInterval(() => {\n        if (index < botReply.length) {\n          currentText += botReply[index];\n          setTypingBotMessage(currentText);\n          index++;\n        } else {\n          clearInterval(interval);\n          setMessages(prev => [...prev, {\n            text: botReply,\n            isUser: false\n          }]);\n          setTypingBotMessage(null);\n        }\n      }, 30);\n    }\n  };\n  const handleDragOver = event => event.preventDefault();\n  useEffect(() => {\n    document.documentElement.classList.toggle(\"dark\", darkMode);\n    localStorage.setItem(\"theme\", darkMode ? \"dark\" : \"light\");\n  }, [darkMode]);\n  const fetchChats = useCallback(async () => {\n    try {\n      const data = await getChats();\n      if (data.chats.length > 0) {\n        setChats(data.chats);\n        setChatId(data.chats[0].id);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n    }\n  }, []);\n  const fetchMessages = useCallback(async selectedChatId => {\n    try {\n      const data = await getMessages(selectedChatId);\n      const formattedMessages = data.flatMap(msg => [{\n        text: msg.content,\n        isUser: true\n      }, {\n        text: msg.response,\n        isUser: false\n      }]);\n      setMessages(formattedMessages);\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) navigate(\"/\");else fetchChats();\n  }, [navigate, fetchChats]);\n  useEffect(() => {\n    if (chatId) fetchMessages(chatId);\n  }, [chatId, fetchMessages]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, typingBotMessage]);\n  const handleNewChat = async () => {\n    try {\n      const response = await createNewChat();\n      const newChat = {\n        id: response.chat_id\n      };\n      setChats(prev => [...prev, newChat]);\n      setChatId(newChat.id);\n      setMessages([]);\n    } catch (error) {\n      console.error(\"Error creating new chat:\", error);\n    }\n  };\n  const handleSend = async () => {\n    if (!userMessage.trim() || !chatId) return;\n    const userText = userMessage.trim();\n    setMessages(prev => [...prev, {\n      text: userText,\n      isUser: true\n    }]);\n    setUserMessage(\"\");\n    const lower = userText.toLowerCase();\n    let botResponse = null;\n    if (lower === \"hi bot!\") {\n      botResponse = \"Hey , how are you ? It’s been a while since we last talked!\";\n    } else if (lower.includes(\"weekly mission\")) {\n      botResponse = \"It’s time for an especially exciting challenge! This week, we’re embarking on a delicious and healthy mission: to share as many photos as possible of homemade healthy meals. So who’s ready to become the Health Chef of the week?\";\n    }\n    if (botResponse) {\n      let fullText = botResponse;\n      let currentText = \"\";\n      let index = 0;\n      setTypingBotMessage(\"\");\n      const interval = setInterval(() => {\n        if (index < fullText.length) {\n          currentText += fullText[index];\n          setTypingBotMessage(currentText);\n          index++;\n        } else {\n          clearInterval(interval);\n          setMessages(prev => [...prev, {\n            text: fullText,\n            isUser: false\n          }]);\n          setTypingBotMessage(null);\n        }\n      }, 30);\n      return;\n    }\n    try {\n      const response = await sendMessage(chatId, userText);\n      if (response) {\n        let fullText = response.response;\n        let currentText = \"\";\n        let index = 0;\n        setTypingBotMessage(\"\");\n        const interval = setInterval(() => {\n          if (index < fullText.length) {\n            currentText += fullText[index];\n            setTypingBotMessage(currentText);\n            index++;\n          } else {\n            clearInterval(interval);\n            setMessages(prev => [...prev, {\n              text: fullText,\n              isUser: false\n            }]);\n            setTypingBotMessage(null);\n          }\n        }, 30);\n      }\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      setMessages(prev => [...prev, {\n        text: `Error: ${error.message}`,\n        isUser: false\n      }]);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    let y = 10;\n    messages.forEach(msg => {\n      const sender = msg.isUser ? \"You\" : botName;\n      const line = `${sender}: ${msg.text}`;\n      doc.text(line, 10, y);\n      y += 10;\n      if (y > 280) {\n        doc.addPage();\n        y = 10;\n      }\n    });\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center justify-center min-h-screen p-4 ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `max-w-4xl w-full p-6 rounded-lg shadow-lg relative ${darkMode ? \"bg-gray-800\" : \"bg-white\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4 flex items-center justify-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"strike1.jpg\",\n          alt: \"Bot Icon\",\n          className: \"w-20 h-20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), \"Chat with \", botName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        className: `absolute top-4 left-4 p-2 rounded-lg ${darkMode ? \"bg-gray-200 text-black\" : \"bg-gray-800 text-white\"}`,\n        children: darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportPDF,\n        className: \"absolute top-4 right-28 p-2 bg-yellow-500 text-black rounded-lg\",\n        children: \"Export PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4 mt-8\",\n        children: [chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setChatId(chat.id);\n            fetchMessages(chat.id);\n          },\n          className: `p-2 rounded-lg ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`,\n          children: [\"Chat \", index + 1]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewChat,\n          className: \"p-2 bg-green-500 rounded-lg text-white\",\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        ref: dropRef,\n        className: `h-96 overflow-y-auto p-4 space-y-4 rounded-lg ${darkMode ? \"bg-gray-700\" : \"bg-gray-200\"}`,\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 50 : -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), \" \", msg.text, msg.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: msg.imageUrl,\n            alt: \"Dropped preview\",\n            className: \"mt-2 rounded shadow max-h-24\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 32\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)), typingBotMessage && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: \"p-3 rounded-lg max-w-xs bg-gray-600 text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), \" \", typingBotMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend(),\n          placeholder: \"Type your message...\",\n          className: `flex-1 p-3 rounded-lg outline-none ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-2 p-2 bg-blue-500 rounded-full text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"HEUeMYxURLcYbvxinoYqWuHsNL0=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","useNavigate","getChats","createNewChat","getMessages","sendMessage","jsPDF","jsxDEV","_jsxDEV","botName","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","chatId","setChatId","chats","setChats","messagesEndRef","navigate","darkMode","setDarkMode","localStorage","getItem","typingBotMessage","setTypingBotMessage","dropRef","handleDrop","event","preventDefault","file","dataTransfer","files","type","startsWith","imageUrl","URL","createObjectURL","prev","text","name","isUser","botReply","currentText","index","interval","setInterval","length","clearInterval","handleDragOver","document","documentElement","classList","toggle","setItem","fetchChats","data","id","error","console","fetchMessages","selectedChatId","formattedMessages","flatMap","msg","content","response","token","_messagesEndRef$curre","current","scrollIntoView","behavior","handleNewChat","newChat","chat_id","handleSend","trim","userText","lower","toLowerCase","botResponse","includes","fullText","message","handleLogout","removeItem","handleExportPDF","doc","y","forEach","sender","line","addPage","save","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","chat","onDrop","onDragOver","ref","div","initial","opacity","x","animate","transition","duration","value","onChange","e","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/moham/chatGpt/frontend/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\r\nimport jsPDF from \"jspdf\";\r\n\r\nconst botName = \"Streakbot\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [chatId, setChatId] = useState(null);\r\n  const [chats, setChats] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const [darkMode, setDarkMode] = useState(localStorage.getItem(\"theme\") === \"dark\");\r\n  const [typingBotMessage, setTypingBotMessage] = useState(null);\r\n\r\n  const dropRef = useRef(null);\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    const file = event.dataTransfer.files[0];\r\n    if (file && file.type.startsWith(\"image/\")) {\r\n      const imageUrl = URL.createObjectURL(file);\r\n      setMessages((prev) => [...prev, { text: `📷 ${file.name}`, isUser: true, imageUrl }]);\r\n\r\n      const botReply = \"A colorful picture of fruits was spotted, well done! You’ve earned 6 points\";\r\n      let currentText = \"\";\r\n      let index = 0;\r\n\r\n      setTypingBotMessage(\"\");\r\n      const interval = setInterval(() => {\r\n        if (index < botReply.length) {\r\n          currentText += botReply[index];\r\n          setTypingBotMessage(currentText);\r\n          index++;\r\n        } else {\r\n          clearInterval(interval);\r\n          setMessages((prev) => [...prev, { text: botReply, isUser: false }]);\r\n          setTypingBotMessage(null);\r\n        }\r\n      }, 30);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (event) => event.preventDefault();\r\n\r\n  useEffect(() => {\r\n    document.documentElement.classList.toggle(\"dark\", darkMode);\r\n    localStorage.setItem(\"theme\", darkMode ? \"dark\" : \"light\");\r\n  }, [darkMode]);\r\n\r\n  const fetchChats = useCallback(async () => {\r\n    try {\r\n      const data = await getChats();\r\n      if (data.chats.length > 0) {\r\n        setChats(data.chats);\r\n        setChatId(data.chats[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchMessages = useCallback(async (selectedChatId) => {\r\n    try {\r\n      const data = await getMessages(selectedChatId);\r\n      const formattedMessages = data.flatMap((msg) => [\r\n        { text: msg.content, isUser: true },\r\n        { text: msg.response, isUser: false },\r\n      ]);\r\n      setMessages(formattedMessages);\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) navigate(\"/\");\r\n    else fetchChats();\r\n  }, [navigate, fetchChats]);\r\n\r\n  useEffect(() => {\r\n    if (chatId) fetchMessages(chatId);\r\n  }, [chatId, fetchMessages]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, typingBotMessage]);\r\n\r\n  const handleNewChat = async () => {\r\n    try {\r\n      const response = await createNewChat();\r\n      const newChat = { id: response.chat_id };\r\n      setChats((prev) => [...prev, newChat]);\r\n      setChatId(newChat.id);\r\n      setMessages([]);\r\n    } catch (error) {\r\n      console.error(\"Error creating new chat:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!userMessage.trim() || !chatId) return;\r\n    const userText = userMessage.trim();\r\n    setMessages((prev) => [...prev, { text: userText, isUser: true }]);\r\n    setUserMessage(\"\");\r\n\r\n    const lower = userText.toLowerCase();\r\n    let botResponse = null;\r\n    if (lower === \"hi bot!\") {\r\n      botResponse = \"Hey , how are you ? It’s been a while since we last talked!\";\r\n    } else if (lower.includes(\"weekly mission\")) {\r\n      botResponse = \"It’s time for an especially exciting challenge! This week, we’re embarking on a delicious and healthy mission: to share as many photos as possible of homemade healthy meals. So who’s ready to become the Health Chef of the week?\";\r\n    }\r\n\r\n    if (botResponse) {\r\n      let fullText = botResponse;\r\n      let currentText = \"\";\r\n      let index = 0;\r\n      setTypingBotMessage(\"\");\r\n      const interval = setInterval(() => {\r\n        if (index < fullText.length) {\r\n          currentText += fullText[index];\r\n          setTypingBotMessage(currentText);\r\n          index++;\r\n        } else {\r\n          clearInterval(interval);\r\n          setMessages((prev) => [...prev, { text: fullText, isUser: false }]);\r\n          setTypingBotMessage(null);\r\n        }\r\n      }, 30);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await sendMessage(chatId, userText);\r\n      if (response) {\r\n        let fullText = response.response;\r\n        let currentText = \"\";\r\n        let index = 0;\r\n        setTypingBotMessage(\"\");\r\n        const interval = setInterval(() => {\r\n          if (index < fullText.length) {\r\n            currentText += fullText[index];\r\n            setTypingBotMessage(currentText);\r\n            index++;\r\n          } else {\r\n            clearInterval(interval);\r\n            setMessages((prev) => [...prev, { text: fullText, isUser: false }]);\r\n            setTypingBotMessage(null);\r\n          }\r\n        }, 30);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      setMessages((prev) => [...prev, { text: `Error: ${error.message}`, isUser: false }]);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleExportPDF = () => {\r\n    const doc = new jsPDF();\r\n    let y = 10;\r\n    messages.forEach((msg) => {\r\n      const sender = msg.isUser ? \"You\" : botName;\r\n      const line = `${sender}: ${msg.text}`;\r\n      doc.text(line, 10, y);\r\n      y += 10;\r\n      if (y > 280) { doc.addPage(); y = 10; }\r\n    });\r\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\r\n  };\r\n\r\n  return (\r\n    <div className={`flex flex-col items-center justify-center min-h-screen p-4 ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`}>\r\n      <div className={`max-w-4xl w-full p-6 rounded-lg shadow-lg relative ${darkMode ? \"bg-gray-800\" : \"bg-white\"}`}>\r\n        <h2 className=\"text-center text-2xl font-bold mb-4 flex items-center justify-center gap-2\">\r\n          <img src=\"strike1.jpg\" alt=\"Bot Icon\" className=\"w-20 h-20\" />\r\n          Chat with {botName}\r\n        </h2>\r\n        <button onClick={() => setDarkMode(!darkMode)} className={`absolute top-4 left-4 p-2 rounded-lg ${darkMode ? \"bg-gray-200 text-black\" : \"bg-gray-800 text-white\"}`}>\r\n          {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n        </button>\r\n        <button onClick={handleLogout} className=\"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\">Logout</button>\r\n        <button onClick={handleExportPDF} className=\"absolute top-4 right-28 p-2 bg-yellow-500 text-black rounded-lg\">Export PDF</button>\r\n\r\n        <div className=\"flex flex-wrap gap-2 mb-4 mt-8\">\r\n          {chats.map((chat, index) => (\r\n            <button\r\n              key={chat.id}\r\n              onClick={() => { setChatId(chat.id); fetchMessages(chat.id); }}\r\n              className={`p-2 rounded-lg ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`}\r\n            >\r\n              Chat {index + 1}\r\n            </button>\r\n          ))}\r\n          <button onClick={handleNewChat} className=\"p-2 bg-green-500 rounded-lg text-white\">New Chat</button>\r\n        </div>\r\n\r\n        <div onDrop={handleDrop} onDragOver={handleDragOver} ref={dropRef} className={`h-96 overflow-y-auto p-4 space-y-4 rounded-lg ${darkMode ? \"bg-gray-700\" : \"bg-gray-200\"}`}>\r\n          {messages.map((msg, index) => (\r\n            <motion.div\r\n              key={index}\r\n              initial={{ opacity: 0, x: msg.isUser ? 50 : -50 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className={`p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`}\r\n            >\r\n              <strong>{msg.isUser ? \"You\" : botName}:</strong> {msg.text}\r\n              {msg.imageUrl && <img src={msg.imageUrl} alt=\"Dropped preview\" className=\"mt-2 rounded shadow max-h-24\" />}\r\n            </motion.div>\r\n          ))}\r\n          {typingBotMessage && (\r\n            <motion.div initial={{ opacity: 0, x: -50 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.3 }} className=\"p-3 rounded-lg max-w-xs bg-gray-600 text-white\">\r\n              <strong>{botName}:</strong> {typingBotMessage}\r\n            </motion.div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"flex items-center mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={userMessage}\r\n            onChange={(e) => setUserMessage(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n            placeholder=\"Type your message...\"\r\n            className={`flex-1 p-3 rounded-lg outline-none ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`}\r\n          />\r\n          <button onClick={handleSend} className=\"ml-2 p-2 bg-blue-500 rounded-full text-white\">Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}