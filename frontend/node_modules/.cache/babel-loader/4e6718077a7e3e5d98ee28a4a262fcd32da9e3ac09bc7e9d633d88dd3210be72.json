{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\chatGpt\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\n// 🔹 Global token variable (temporary storage before localStorage)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet globalToken = null;\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isTokenChecked, setIsTokenChecked] = useState(false); // Prevents infinite loops\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const token = urlParams.get(\"token\");\n    if (token) {\n      console.log(\"✅ Google login successful, storing token:\", token);\n      globalToken = token; // 🔹 Store in global variable\n      localStorage.setItem(\"token\", token);\n      sessionStorage.setItem(\"token\", token);\n      setTimeout(() => {\n        if (localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\")) {\n          navigate(\"/chat\", {\n            replace: true\n          });\n        }\n      }, 200); // ✅ Short delay ensures storage before navigation\n    } else {\n      const storedToken = globalToken || localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\n      console.log(\"🔹 Checking stored token:\", storedToken);\n      if (storedToken && !isTokenChecked) {\n        setIsTokenChecked(true); // ✅ Prevents infinite re-renders\n        navigate(\"/chat\", {\n          replace: true\n        });\n      }\n    }\n  }, [navigate, isTokenChecked]); // ✅ Ensures it only runs once\n\n  // ✅ Handle Standard Login\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      console.log(\"🔹 Sending login data:\", {\n        email,\n        password\n      });\n      const response = await axios.post(\"http://localhost:8000/login\", {\n        email,\n        password\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      if (response.data.token) {\n        globalToken = response.data.token; // 🔹 Store in global variable\n        localStorage.setItem(\"token\", response.data.token);\n        sessionStorage.setItem(\"token\", response.data.token);\n        alert(\"✅ Login successful!\");\n        navigate(\"/chat\", {\n          replace: true\n        });\n      } else {\n        throw new Error(\"Invalid response from server\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"❌ Login Error:\", error.response ? error.response.data : error.message);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"Invalid credentials. Please try again.\");\n    }\n  };\n\n  // ✅ Handle Google Login\n  const handleGoogleLogin = () => {\n    window.location.href = \"http://localhost:8000/auth/google\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full bg-gray-800 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email\",\n          className: \"w-full p-3 text-white bg-gray-700 rounded-lg outline-none\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          className: \"w-full p-3 text-white bg-gray-700 rounded-lg outline-none\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full p-3 bg-blue-500 rounded-lg text-white\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoogleLogin,\n        className: \"w-full p-3 mt-4 bg-red-500 rounded-lg text-white\",\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center mt-4\",\n        children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-blue-400 cursor-pointer\",\n          onClick: () => navigate(\"/signup\"),\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"7HZG257vc9/QiA3RRD9+WW2ByVU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","globalToken","Login","_s","navigate","email","setEmail","password","setPassword","error","setError","isTokenChecked","setIsTokenChecked","urlParams","URLSearchParams","window","location","search","token","get","console","log","localStorage","setItem","sessionStorage","setTimeout","getItem","replace","storedToken","handleLogin","e","preventDefault","response","post","headers","withCredentials","data","alert","Error","_error$response","_error$response$data","message","detail","handleGoogleLogin","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moham/chatGpt/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// 🔹 Global token variable (temporary storage before localStorage)\r\nlet globalToken = null;\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isTokenChecked, setIsTokenChecked] = useState(false); // Prevents infinite loops\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const token = urlParams.get(\"token\");\r\n\r\n    if (token) {\r\n      console.log(\"✅ Google login successful, storing token:\", token);\r\n      \r\n      globalToken = token; // 🔹 Store in global variable\r\n      localStorage.setItem(\"token\", token);\r\n      sessionStorage.setItem(\"token\", token);\r\n\r\n      setTimeout(() => {\r\n        if (localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\")) {\r\n          navigate(\"/chat\", { replace: true });\r\n        }\r\n      }, 200); // ✅ Short delay ensures storage before navigation\r\n    } else {\r\n      const storedToken = globalToken || localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\r\n\r\n      console.log(\"🔹 Checking stored token:\", storedToken);\r\n      if (storedToken && !isTokenChecked) {\r\n        setIsTokenChecked(true); // ✅ Prevents infinite re-renders\r\n        navigate(\"/chat\", { replace: true });\r\n      }\r\n    }\r\n  }, [navigate, isTokenChecked]); // ✅ Ensures it only runs once\r\n\r\n  // ✅ Handle Standard Login\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      console.log(\"🔹 Sending login data:\", { email, password });\r\n\r\n      const response = await axios.post(\r\n        \"http://localhost:8000/login\",\r\n        { email, password },\r\n        {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      if (response.data.token) {\r\n        globalToken = response.data.token; // 🔹 Store in global variable\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        sessionStorage.setItem(\"token\", response.data.token);\r\n        alert(\"✅ Login successful!\");\r\n        navigate(\"/chat\", { replace: true });\r\n      } else {\r\n        throw new Error(\"Invalid response from server\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Login Error:\", error.response ? error.response.data : error.message);\r\n      setError(error.response?.data?.detail || \"Invalid credentials. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // ✅ Handle Google Login\r\n  const handleGoogleLogin = () => {\r\n    window.location.href = \"http://localhost:8000/auth/google\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\">\r\n      <div className=\"max-w-md w-full bg-gray-800 p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-center text-2xl font-bold mb-4\">Login</h2>\r\n\r\n        {error && <p className=\"text-red-500 text-center\">{error}</p>}\r\n\r\n        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Email\"\r\n            className=\"w-full p-3 text-white bg-gray-700 rounded-lg outline-none\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Password\"\r\n            className=\"w-full p-3 text-white bg-gray-700 rounded-lg outline-none\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"w-full p-3 bg-blue-500 rounded-lg text-white\">\r\n            Login\r\n          </button>\r\n        </form>\r\n\r\n        <button\r\n          onClick={handleGoogleLogin}\r\n          className=\"w-full p-3 mt-4 bg-red-500 rounded-lg text-white\"\r\n        >\r\n          Login with Google\r\n        </button>\r\n\r\n        <p className=\"text-center mt-4\">\r\n          Don't have an account?{\" \"}\r\n          <span className=\"text-blue-400 cursor-pointer\" onClick={() => navigate(\"/signup\")}>\r\n            Sign up\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}