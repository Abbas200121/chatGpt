{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\chatGpt\\\\frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\nimport jsPDF from \"jspdf\"; // ← NEW\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"Chatbot\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [chatId, setChatId] = useState(null);\n  const [chats, setChats] = useState([]);\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n  const [darkMode, setDarkMode] = useState(localStorage.getItem(\"theme\") === \"dark\");\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.setItem(\"theme\", \"light\");\n    }\n  }, [darkMode]);\n  const fetchChats = useCallback(async () => {\n    try {\n      const data = await getChats();\n      if (data.chats.length > 0) {\n        setChats(data.chats);\n        setChatId(data.chats[0].id);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n    }\n  }, []);\n  const fetchMessages = useCallback(async selectedChatId => {\n    try {\n      const data = await getMessages(selectedChatId);\n      const formattedMessages = data.map(msg => [{\n        text: msg.content,\n        isUser: true\n      }, {\n        text: msg.response,\n        isUser: false\n      }]).flat();\n      setMessages(formattedMessages);\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.warn(\"No token found! Redirecting to login...\");\n      navigate(\"/\");\n    } else {\n      fetchChats();\n    }\n  }, [navigate, fetchChats]);\n  useEffect(() => {\n    if (chatId) {\n      fetchMessages(chatId);\n    }\n  }, [chatId, fetchMessages]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleNewChat = async () => {\n    try {\n      const response = await createNewChat();\n      const newChat = {\n        id: response.chat_id\n      };\n      setChats(prevChats => [...prevChats, newChat]);\n      setChatId(newChat.id);\n      setMessages([]);\n    } catch (error) {\n      console.error(\"Error creating new chat:\", error);\n    }\n  };\n  const handleSend = async () => {\n    if (!userMessage.trim() || !chatId) return;\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setUserMessage(\"\");\n    try {\n      const response = await sendMessage(chatId, userMessage);\n      if (response) {\n        setMessages(prev => [...prev, {\n          text: response.response,\n          isUser: false\n        }]);\n      }\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      setMessages(prev => [...prev, {\n        text: `Error: ${error.message}`,\n        isUser: false\n      }]);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n\n  // ✅ Export chat messages to PDF\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    let y = 10;\n    messages.forEach(msg => {\n      const sender = msg.isUser ? \"You\" : botName;\n      const line = `${sender}: ${msg.text}`;\n      doc.text(line, 10, y);\n      y += 10;\n      if (y > 280) {\n        doc.addPage();\n        y = 10;\n      }\n    });\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center justify-center min-h-screen p-4 \n      ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `max-w-lg w-full p-6 rounded-lg shadow-lg relative \n        ${darkMode ? \"bg-gray-800\" : \"bg-white\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: [\"Chat with \", botName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        className: `absolute top-4 left-4 p-2 rounded-lg \n            ${darkMode ? \"bg-gray-200 text-black\" : \"bg-gray-800 text-white\"}`,\n        children: darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportPDF,\n        className: \"absolute top-4 right-24 p-2 bg-yellow-500 text-black rounded-lg\",\n        children: \"Export PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4 mt-8\",\n        children: [chats.map(chat => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setChatId(chat.id);\n            fetchMessages(chat.id);\n          },\n          className: `p-2 rounded-lg ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`,\n          children: [\"Chat \", chat.id]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewChat,\n          className: \"p-2 bg-green-500 rounded-lg text-white\",\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-96 overflow-y-auto p-4 space-y-4 rounded-lg \n          ${darkMode ? \"bg-gray-700\" : \"bg-gray-200\"}`,\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 50 : -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), \" \", msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend(),\n          placeholder: \"Type your message...\",\n          className: `flex-1 p-3 rounded-lg outline-none \n              ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-2 p-2 bg-blue-500 rounded-full text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"vLxMdaumukV8/4Dx7iP7zges048=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","useNavigate","getChats","createNewChat","getMessages","sendMessage","jsPDF","jsxDEV","_jsxDEV","botName","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","chatId","setChatId","chats","setChats","messagesEndRef","navigate","darkMode","setDarkMode","localStorage","getItem","document","documentElement","classList","add","setItem","remove","fetchChats","data","length","id","error","console","fetchMessages","selectedChatId","formattedMessages","map","msg","text","content","isUser","response","flat","token","warn","_messagesEndRef$curre","current","scrollIntoView","behavior","handleNewChat","newChat","chat_id","prevChats","handleSend","trim","prev","message","handleLogout","removeItem","handleExportPDF","doc","y","forEach","sender","line","addPage","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","chat","index","div","initial","opacity","x","animate","transition","duration","ref","type","value","onChange","e","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/moham/chatGpt/frontend/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\r\nimport jsPDF from \"jspdf\"; // ← NEW\r\n\r\nconst botName = \"Chatbot\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [chatId, setChatId] = useState(null);\r\n  const [chats, setChats] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const [darkMode, setDarkMode] = useState(\r\n    localStorage.getItem(\"theme\") === \"dark\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const fetchChats = useCallback(async () => {\r\n    try {\r\n      const data = await getChats();\r\n      if (data.chats.length > 0) {\r\n        setChats(data.chats);\r\n        setChatId(data.chats[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchMessages = useCallback(async (selectedChatId) => {\r\n    try {\r\n      const data = await getMessages(selectedChatId);\r\n      const formattedMessages = data.map((msg) => [\r\n        { text: msg.content, isUser: true },\r\n        { text: msg.response, isUser: false },\r\n      ]).flat();\r\n      setMessages(formattedMessages);\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      console.warn(\"No token found! Redirecting to login...\");\r\n      navigate(\"/\");\r\n    } else {\r\n      fetchChats();\r\n    }\r\n  }, [navigate, fetchChats]);\r\n\r\n  useEffect(() => {\r\n    if (chatId) {\r\n      fetchMessages(chatId);\r\n    }\r\n  }, [chatId, fetchMessages]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const handleNewChat = async () => {\r\n    try {\r\n      const response = await createNewChat();\r\n      const newChat = { id: response.chat_id };\r\n      setChats((prevChats) => [...prevChats, newChat]);\r\n      setChatId(newChat.id);\r\n      setMessages([]);\r\n    } catch (error) {\r\n      console.error(\"Error creating new chat:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!userMessage.trim() || !chatId) return;\r\n    setMessages((prev) => [...prev, { text: userMessage, isUser: true }]);\r\n    setUserMessage(\"\");\r\n\r\n    try {\r\n      const response = await sendMessage(chatId, userMessage);\r\n      if (response) {\r\n        setMessages((prev) => [...prev, { text: response.response, isUser: false }]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      setMessages((prev) => [...prev, { text: `Error: ${error.message}`, isUser: false }]);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  // ✅ Export chat messages to PDF\r\n  const handleExportPDF = () => {\r\n    const doc = new jsPDF();\r\n    let y = 10;\r\n\r\n    messages.forEach((msg) => {\r\n      const sender = msg.isUser ? \"You\" : botName;\r\n      const line = `${sender}: ${msg.text}`;\r\n      doc.text(line, 10, y);\r\n      y += 10;\r\n\r\n      if (y > 280) {\r\n        doc.addPage();\r\n        y = 10;\r\n      }\r\n    });\r\n\r\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\r\n  };\r\n\r\n  return (\r\n    <div className={`flex flex-col items-center justify-center min-h-screen p-4 \r\n      ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`}>\r\n\r\n      <div className={`max-w-lg w-full p-6 rounded-lg shadow-lg relative \r\n        ${darkMode ? \"bg-gray-800\" : \"bg-white\"}`}>\r\n\r\n        <h2 className=\"text-center text-2xl font-bold mb-4\">Chat with {botName}</h2>\r\n\r\n        {/* Dark Mode Toggle */}\r\n        <button\r\n          onClick={() => setDarkMode(!darkMode)}\r\n          className={`absolute top-4 left-4 p-2 rounded-lg \r\n            ${darkMode ? \"bg-gray-200 text-black\" : \"bg-gray-800 text-white\"}`}\r\n        >\r\n          {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n        </button>\r\n\r\n        {/* Logout */}\r\n        <button onClick={handleLogout} className=\"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\">\r\n          Logout\r\n        </button>\r\n\r\n        {/* Export PDF */}\r\n        <button\r\n          onClick={handleExportPDF}\r\n          className=\"absolute top-4 right-24 p-2 bg-yellow-500 text-black rounded-lg\"\r\n        >\r\n          Export PDF\r\n        </button>\r\n\r\n        {/* Chat Selection */}\r\n        <div className=\"flex flex-wrap gap-2 mb-4 mt-8\">\r\n          {chats.map((chat) => (\r\n            <button\r\n              key={chat.id}\r\n              onClick={() => {\r\n                setChatId(chat.id);\r\n                fetchMessages(chat.id);\r\n              }}\r\n              className={`p-2 rounded-lg ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`}\r\n            >\r\n              Chat {chat.id}\r\n            </button>\r\n          ))}\r\n          <button onClick={handleNewChat} className=\"p-2 bg-green-500 rounded-lg text-white\">\r\n            New Chat\r\n          </button>\r\n        </div>\r\n\r\n        {/* Chat Messages */}\r\n        <div className={`h-96 overflow-y-auto p-4 space-y-4 rounded-lg \r\n          ${darkMode ? \"bg-gray-700\" : \"bg-gray-200\"}`}>\r\n          {messages.map((msg, index) => (\r\n            <motion.div\r\n              key={index}\r\n              initial={{ opacity: 0, x: msg.isUser ? 50 : -50 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className={`p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`}\r\n            >\r\n              <strong>{msg.isUser ? \"You\" : botName}:</strong> {msg.text}\r\n            </motion.div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Input */}\r\n        <div className=\"flex items-center mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={userMessage}\r\n            onChange={(e) => setUserMessage(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n            placeholder=\"Type your message...\"\r\n            className={`flex-1 p-3 rounded-lg outline-none \r\n              ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`}\r\n          />\r\n          <button onClick={handleSend} className=\"ml-2 p-2 bg-blue-500 rounded-full text-white\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}