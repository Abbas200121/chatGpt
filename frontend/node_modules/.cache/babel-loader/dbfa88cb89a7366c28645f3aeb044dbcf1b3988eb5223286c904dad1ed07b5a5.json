{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\chatGpt\\\\frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\nimport jsPDF from \"jspdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"Chatbot\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [chatId, setChatId] = useState(null);\n  const [chats, setChats] = useState([]);\n  const [generateImageMode, setGenerateImageMode] = useState(false);\n  const messagesEndRef = useRef(null);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const navigate = useNavigate();\n  const [darkMode, setDarkMode] = useState(localStorage.getItem(\"theme\") === \"dark\");\n  const [typingBotMessage, setTypingBotMessage] = useState(null);\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.setItem(\"theme\", \"light\");\n    }\n  }, [darkMode]);\n  const fetchChats = useCallback(async () => {\n    try {\n      const data = await getChats();\n      if (data.chats.length > 0) {\n        setChats(data.chats);\n        setChatId(data.chats[0].id);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n    }\n  }, []);\n  const fetchMessages = useCallback(async selectedChatId => {\n    try {\n      const data = await getMessages(selectedChatId);\n      const formattedMessages = data.map(msg => [{\n        text: msg.content,\n        isUser: true\n      }, {\n        text: msg.response,\n        isUser: false\n      }]).flat();\n      setMessages(formattedMessages);\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/\");\n    } else {\n      fetchChats();\n    }\n  }, [navigate, fetchChats]);\n  useEffect(() => {\n    if (chatId) {\n      fetchMessages(chatId);\n    }\n  }, [chatId, fetchMessages]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, typingBotMessage]);\n  const handleNewChat = async () => {\n    try {\n      const response = await createNewChat();\n      const newChat = {\n        id: response.chat_id\n      };\n      setChats(prevChats => [...prevChats, newChat]);\n      setChatId(newChat.id);\n      setMessages([]);\n    } catch (error) {\n      console.error(\"Error creating new chat:\", error);\n    }\n  };\n  const handleSend = async () => {\n    if (!userMessage.trim() || !chatId) return;\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setUserMessage(\"\");\n    try {\n      let response;\n      if (generateImageMode) {\n        const res = await fetch(`http://localhost:8000/chats/${chatId}/generate-image`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          },\n          body: JSON.stringify({\n            prompt: userMessage\n          })\n        });\n        response = await res.json();\n      } else {\n        response = await sendMessage(chatId, userMessage);\n      }\n      if (response) {\n        const isImage = generateImageMode;\n        const content = isImage ? `<img src=\"${response.response}\" alt=\"Generated\" class=\"rounded-lg max-w-full\" />` : response.response;\n        setMessages(prev => [...prev, {\n          text: content,\n          isUser: false\n        }]);\n        setTypingBotMessage(null);\n      }\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      setMessages(prev => [...prev, {\n        text: `Error: ${error.message}`,\n        isUser: false\n      }]);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    let y = 10;\n    messages.forEach(msg => {\n      const sender = msg.isUser ? \"You\" : botName;\n      const plainText = msg.text.replace(/<[^>]+>/g, \"\"); // strip HTML\n      const line = `${sender}: ${plainText}`;\n      doc.text(line, 10, y);\n      y += 10;\n      if (y > 280) {\n        doc.addPage();\n        y = 10;\n      }\n    });\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center justify-center min-h-screen p-4 ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `max-w-4xl w-full p-6 rounded-lg shadow-lg relative ${darkMode ? \"bg-gray-800\" : \"bg-white\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: [\"Chat with \", botName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        className: `absolute top-4 left-4 p-2 rounded-lg ${darkMode ? \"bg-gray-200 text-black\" : \"bg-gray-800 text-white\"}`,\n        children: darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportPDF,\n        className: \"absolute top-4 right-28 p-2 bg-yellow-500 text-black rounded-lg\",\n        children: \"Export PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4 mt-8\",\n        children: [chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setChatId(chat.id);\n            fetchMessages(chat.id);\n          },\n          className: `p-2 rounded-lg ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`,\n          children: [\"Chat \", index + 1]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewChat,\n          className: \"p-2 bg-green-500 rounded-lg text-white\",\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setGenerateImageMode(prev => !prev),\n          className: `p-2 rounded-lg ${generateImageMode ? \"bg-purple-500 text-white\" : \"bg-gray-400 text-black\"}`,\n          children: generateImageMode ? \"🖼 Image Mode ON\" : \"💬 Text Mode ON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-96 overflow-y-auto p-4 space-y-4 rounded-lg ${darkMode ? \"bg-gray-700\" : \"bg-gray-200\"}`,\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 50 : -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: msg.text\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)), typingBotMessage && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: \"p-3 rounded-lg max-w-xs bg-gray-600 text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), \" \", typingBotMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: e => {\n            const file = e.target.files[0];\n            if (file) {\n              const reader = new FileReader();\n              reader.onloadend = () => {\n                setUploadedImage(reader.result);\n                setMessages(prev => [...prev, {\n                  text: `<img src=\"${reader.result}\" alt=\"uploaded\" class=\"rounded-lg max-w-full\" />`,\n                  isUser: true\n                }]);\n              };\n              reader.readAsDataURL(file);\n            }\n          },\n          className: \"ml-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend(),\n          placeholder: \"Type your message...\",\n          className: `flex-1 p-3 rounded-lg outline-none ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-2 p-2 bg-blue-500 rounded-full text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"5TA83bdW+u9+NHY6rtVHDSCllf8=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","useNavigate","getChats","createNewChat","getMessages","sendMessage","jsPDF","jsxDEV","_jsxDEV","botName","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","chatId","setChatId","chats","setChats","generateImageMode","setGenerateImageMode","messagesEndRef","uploadedImage","setUploadedImage","navigate","darkMode","setDarkMode","localStorage","getItem","typingBotMessage","setTypingBotMessage","document","documentElement","classList","add","setItem","remove","fetchChats","data","length","id","error","console","fetchMessages","selectedChatId","formattedMessages","map","msg","text","content","isUser","response","flat","token","_messagesEndRef$curre","current","scrollIntoView","behavior","handleNewChat","newChat","chat_id","prevChats","handleSend","trim","prev","res","fetch","method","headers","Authorization","body","JSON","stringify","prompt","json","isImage","message","handleLogout","removeItem","handleExportPDF","doc","y","forEach","sender","plainText","replace","line","addPage","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","chat","index","div","initial","opacity","x","animate","transition","duration","dangerouslySetInnerHTML","__html","ref","type","accept","onChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","value","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/moham/chatGpt/frontend/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\r\nimport jsPDF from \"jspdf\";\r\n\r\nconst botName = \"Chatbot\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [chatId, setChatId] = useState(null);\r\n  const [chats, setChats] = useState([]);\r\n  const [generateImageMode, setGenerateImageMode] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [darkMode, setDarkMode] = useState(localStorage.getItem(\"theme\") === \"dark\");\r\n  const [typingBotMessage, setTypingBotMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const fetchChats = useCallback(async () => {\r\n    try {\r\n      const data = await getChats();\r\n      if (data.chats.length > 0) {\r\n        setChats(data.chats);\r\n        setChatId(data.chats[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchMessages = useCallback(async (selectedChatId) => {\r\n    try {\r\n      const data = await getMessages(selectedChatId);\r\n      const formattedMessages = data.map((msg) => [\r\n        { text: msg.content, isUser: true },\r\n        { text: msg.response, isUser: false },\r\n      ]).flat();\r\n      setMessages(formattedMessages);\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/\");\r\n    } else {\r\n      fetchChats();\r\n    }\r\n  }, [navigate, fetchChats]);\r\n\r\n  useEffect(() => {\r\n    if (chatId) {\r\n      fetchMessages(chatId);\r\n    }\r\n  }, [chatId, fetchMessages]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, typingBotMessage]);\r\n\r\n  const handleNewChat = async () => {\r\n    try {\r\n      const response = await createNewChat();\r\n      const newChat = { id: response.chat_id };\r\n      setChats((prevChats) => [...prevChats, newChat]);\r\n      setChatId(newChat.id);\r\n      setMessages([]);\r\n    } catch (error) {\r\n      console.error(\"Error creating new chat:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!userMessage.trim() || !chatId) return;\r\n    setMessages((prev) => [...prev, { text: userMessage, isUser: true }]);\r\n    setUserMessage(\"\");\r\n\r\n    try {\r\n      let response;\r\n\r\n      if (generateImageMode) {\r\n        const res = await fetch(`http://localhost:8000/chats/${chatId}/generate-image`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n          body: JSON.stringify({ prompt: userMessage }),\r\n        });\r\n        response = await res.json();\r\n      } else {\r\n        response = await sendMessage(chatId, userMessage);\r\n      }\r\n\r\n      if (response) {\r\n        const isImage = generateImageMode;\r\n        const content = isImage\r\n          ? `<img src=\"${response.response}\" alt=\"Generated\" class=\"rounded-lg max-w-full\" />`\r\n          : response.response;\r\n\r\n        setMessages((prev) => [...prev, { text: content, isUser: false }]);\r\n        setTypingBotMessage(null);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      setMessages((prev) => [...prev, { text: `Error: ${error.message}`, isUser: false }]);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleExportPDF = () => {\r\n    const doc = new jsPDF();\r\n    let y = 10;\r\n\r\n    messages.forEach((msg) => {\r\n      const sender = msg.isUser ? \"You\" : botName;\r\n      const plainText = msg.text.replace(/<[^>]+>/g, \"\"); // strip HTML\r\n      const line = `${sender}: ${plainText}`;\r\n      doc.text(line, 10, y);\r\n      y += 10;\r\n      if (y > 280) {\r\n        doc.addPage();\r\n        y = 10;\r\n      }\r\n    });\r\n\r\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\r\n  };\r\n\r\n  return (\r\n    <div className={`flex flex-col items-center justify-center min-h-screen p-4 ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`}>\r\n      <div className={`max-w-4xl w-full p-6 rounded-lg shadow-lg relative ${darkMode ? \"bg-gray-800\" : \"bg-white\"}`}>\r\n\r\n        <h2 className=\"text-center text-2xl font-bold mb-4\">Chat with {botName}</h2>\r\n\r\n        <button onClick={() => setDarkMode(!darkMode)} className={`absolute top-4 left-4 p-2 rounded-lg ${darkMode ? \"bg-gray-200 text-black\" : \"bg-gray-800 text-white\"}`}>\r\n          {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n        </button>\r\n\r\n        <button onClick={handleLogout} className=\"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\">Logout</button>\r\n        <button onClick={handleExportPDF} className=\"absolute top-4 right-28 p-2 bg-yellow-500 text-black rounded-lg\">Export PDF</button>\r\n\r\n        <div className=\"flex flex-wrap gap-2 mb-4 mt-8\">\r\n          {chats.map((chat, index) => (\r\n            <button key={chat.id} onClick={() => { setChatId(chat.id); fetchMessages(chat.id); }} className={`p-2 rounded-lg ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`}>\r\n              Chat {index + 1}\r\n            </button>\r\n          ))}\r\n          <button onClick={handleNewChat} className=\"p-2 bg-green-500 rounded-lg text-white\">New Chat</button>\r\n          <button onClick={() => setGenerateImageMode((prev) => !prev)} className={`p-2 rounded-lg ${generateImageMode ? \"bg-purple-500 text-white\" : \"bg-gray-400 text-black\"}`}>\r\n            {generateImageMode ? \"🖼 Image Mode ON\" : \"💬 Text Mode ON\"}\r\n          </button>\r\n        </div>\r\n\r\n        <div className={`h-96 overflow-y-auto p-4 space-y-4 rounded-lg ${darkMode ? \"bg-gray-700\" : \"bg-gray-200\"}`}>\r\n          {messages.map((msg, index) => (\r\n            <motion.div key={index} initial={{ opacity: 0, x: msg.isUser ? 50 : -50 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.3 }}\r\n              className={`p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`}>\r\n              <strong>{msg.isUser ? \"You\" : botName}:</strong>{\" \"}\r\n              <span dangerouslySetInnerHTML={{ __html: msg.text }} />\r\n            </motion.div>\r\n          ))}\r\n          {typingBotMessage && (\r\n            <motion.div initial={{ opacity: 0, x: -50 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.3 }}\r\n              className=\"p-3 rounded-lg max-w-xs bg-gray-600 text-white\">\r\n              <strong>{botName}:</strong> {typingBotMessage}\r\n            </motion.div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"flex items-center mt-4\">\r\n        <input\r\n  type=\"file\"\r\n  accept=\"image/*\"\r\n  onChange={(e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setUploadedImage(reader.result);\r\n        setMessages((prev) => [...prev, { text: `<img src=\"${reader.result}\" alt=\"uploaded\" class=\"rounded-lg max-w-full\" />`, isUser: true }]);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }}\r\n  className=\"ml-2\"\r\n/>\r\n\r\n          <input type=\"text\" value={userMessage} onChange={(e) => setUserMessage(e.target.value)} onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n            placeholder=\"Type your message...\" className={`flex-1 p-3 rounded-lg outline-none ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`} />\r\n          <button onClick={handleSend} className=\"ml-2 p-2 bg-blue-500 rounded-full text-white\">Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}