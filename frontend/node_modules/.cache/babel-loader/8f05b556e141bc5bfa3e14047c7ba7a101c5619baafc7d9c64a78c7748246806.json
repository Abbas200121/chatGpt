{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\chatGpt\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:8000\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // ✅ Handle token from Google callback only once\n  useEffect(() => {\n    const urlParams = new URLSearchParams(location.search);\n    const token = urlParams.get(\"token\");\n    if (token) {\n      console.log(\"✅ Google login token received:\", token);\n      localStorage.setItem(\"token\", token);\n\n      // ✅ Clean the URL\n      window.history.replaceState({}, document.title, \"/chat\");\n      navigate(\"/chat\", {\n        replace: true\n      });\n    }\n\n    // ✅ Already logged in? Redirect\n    const localToken = localStorage.getItem(\"token\");\n    if (localToken) {\n      navigate(\"/chat\");\n    }\n  }, [location.search, navigate]);\n\n  // ✅ Handle email/password login\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(`${BASE_URL}/login`, {\n        email,\n        password\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      if (res.data.token) {\n        localStorage.setItem(\"token\", res.data.token);\n        navigate(\"/chat\");\n      } else {\n        throw new Error(\"Invalid response from server\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Login error:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || \"Login failed.\");\n    }\n  };\n\n  // ✅ Redirect to Google auth\n  const handleGoogleLogin = () => {\n    window.location.href = `${BASE_URL}/auth/google`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full bg-gray-800 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email\",\n          className: \"w-full p-3 text-white bg-gray-700 rounded-lg outline-none\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          className: \"w-full p-3 text-white bg-gray-700 rounded-lg outline-none\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full p-3 bg-blue-500 rounded-lg text-white\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoogleLogin,\n        className: \"w-full p-3 mt-4 bg-red-500 rounded-lg text-white\",\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center mt-4\",\n        children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-blue-400 cursor-pointer\",\n          onClick: () => navigate(\"/signup\"),\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"j+0pAYIlB810/dJGMvXsZ6Az7ig=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","BASE_URL","Login","_s","navigate","location","email","setEmail","password","setPassword","error","setError","urlParams","URLSearchParams","search","token","get","console","log","localStorage","setItem","window","history","replaceState","document","title","replace","localToken","getItem","handleLogin","e","preventDefault","res","post","headers","withCredentials","data","Error","err","_err$response","_err$response$data","response","detail","handleGoogleLogin","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moham/chatGpt/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst BASE_URL = \"http://localhost:8000\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // ✅ Handle token from Google callback only once\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(location.search);\r\n    const token = urlParams.get(\"token\");\r\n\r\n    if (token) {\r\n      console.log(\"✅ Google login token received:\", token);\r\n      localStorage.setItem(\"token\", token);\r\n\r\n      // ✅ Clean the URL\r\n      window.history.replaceState({}, document.title, \"/chat\");\r\n      navigate(\"/chat\", { replace: true });\r\n    }\r\n\r\n    // ✅ Already logged in? Redirect\r\n    const localToken = localStorage.getItem(\"token\");\r\n    if (localToken) {\r\n      navigate(\"/chat\");\r\n    }\r\n  }, [location.search, navigate]);\r\n\r\n  // ✅ Handle email/password login\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\r\n        `${BASE_URL}/login`,\r\n        { email, password },\r\n        {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      if (res.data.token) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        navigate(\"/chat\");\r\n      } else {\r\n        throw new Error(\"Invalid response from server\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      setError(err.response?.data?.detail || \"Login failed.\");\r\n    }\r\n  };\r\n\r\n  // ✅ Redirect to Google auth\r\n  const handleGoogleLogin = () => {\r\n    window.location.href = `${BASE_URL}/auth/google`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\">\r\n      <div className=\"max-w-md w-full bg-gray-800 p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-center text-2xl font-bold mb-4\">Login</h2>\r\n\r\n        {error && <p className=\"text-red-500 text-center\">{error}</p>}\r\n\r\n        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Email\"\r\n            className=\"w-full p-3 text-white bg-gray-700 rounded-lg outline-none\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Password\"\r\n            className=\"w-full p-3 text-white bg-gray-700 rounded-lg outline-none\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"w-full p-3 bg-blue-500 rounded-lg text-white\">\r\n            Login\r\n          </button>\r\n        </form>\r\n\r\n        <button\r\n          onClick={handleGoogleLogin}\r\n          className=\"w-full p-3 mt-4 bg-red-500 rounded-lg text-white\"\r\n        >\r\n          Login with Google\r\n        </button>\r\n\r\n        <p className=\"text-center mt-4\">\r\n          Don't have an account?{\" \"}\r\n          <span className=\"text-blue-400 cursor-pointer\" onClick={() => navigate(\"/signup\")}>\r\n            Sign up\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}