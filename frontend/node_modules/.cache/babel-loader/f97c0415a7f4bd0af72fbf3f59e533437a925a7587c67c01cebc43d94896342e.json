{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\message-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport MessageForm from \"./components/MessageForm\";\nimport MessageList from \"./components/MessageList\";\nimport { sendMessage } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleSend = async message => {\n    setMessages(prev => [...prev, {\n      text: message,\n      isUser: true\n    }]);\n\n    // Simulate \"Typing...\"\n    const typingMessage = {\n      text: \"Typing...\",\n      isUser: false,\n      isTyping: true\n    };\n    setMessages(prev => [...prev, typingMessage]);\n    try {\n      const response = await sendMessage(message);\n      if (response && response.response) {\n        // Remove \"Typing...\" message before showing AI response\n        setMessages(prev => prev.filter(msg => !msg.isTyping));\n\n        // Add AI response dynamically\n        setTimeout(() => {\n          setMessages(prev => [...prev, {\n            text: \"\",\n            isUser: false,\n            fullText: response.response\n          }]);\n        }, 500);\n      }\n    } catch (error) {\n      console.error(\"Error fetching AI response:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-900 text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        scale: 0.9\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      transition: {\n        duration: 0.5\n      },\n      className: \"max-w-2xl w-full bg-gray-800 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: \"ChatGPT AI Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","motion","MessageForm","MessageList","sendMessage","jsxDEV","_jsxDEV","App","_s","messages","setMessages","handleSend","message","prev","text","isUser","typingMessage","isTyping","response","filter","msg","setTimeout","fullText","error","console","className","children","div","initial","opacity","scale","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","onSend","_c","$RefreshReg$"],"sources":["C:/Users/moham/message-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport MessageForm from \"./components/MessageForm\";\nimport MessageList from \"./components/MessageList\";\nimport { sendMessage } from \"./services/api\";\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n\n  const handleSend = async (message) => {\n    setMessages((prev) => [...prev, { text: message, isUser: true }]);\n\n    // Simulate \"Typing...\"\n    const typingMessage = { text: \"Typing...\", isUser: false, isTyping: true };\n    setMessages((prev) => [...prev, typingMessage]);\n\n    try {\n      const response = await sendMessage(message);\n\n      if (response && response.response) {\n        // Remove \"Typing...\" message before showing AI response\n        setMessages((prev) => prev.filter((msg) => !msg.isTyping));\n\n        // Add AI response dynamically\n        setTimeout(() => {\n          setMessages((prev) => [\n            ...prev,\n            { text: \"\", isUser: false, fullText: response.response },\n          ]);\n        }, 500);\n      }\n    } catch (error) {\n      console.error(\"Error fetching AI response:\", error);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-900 text-white p-4\">\n      <motion.div\n        initial={{ opacity: 0, scale: 0.9 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.5 }}\n        className=\"max-w-2xl w-full bg-gray-800 p-6 rounded-lg shadow-lg\"\n      >\n        <h2 className=\"text-center text-2xl font-bold mb-4\">ChatGPT AI Chat</h2>\n        <MessageList messages={messages} />\n        <MessageForm onSend={handleSend} />\n      </motion.div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,UAAU,GAAG,MAAOC,OAAO,IAAK;IACpCF,WAAW,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAEF,OAAO;MAAEG,MAAM,EAAE;IAAK,CAAC,CAAC,CAAC;;IAEjE;IACA,MAAMC,aAAa,GAAG;MAAEF,IAAI,EAAE,WAAW;MAAEC,MAAM,EAAE,KAAK;MAAEE,QAAQ,EAAE;IAAK,CAAC;IAC1EP,WAAW,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEG,aAAa,CAAC,CAAC;IAE/C,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMd,WAAW,CAACQ,OAAO,CAAC;MAE3C,IAAIM,QAAQ,IAAIA,QAAQ,CAACA,QAAQ,EAAE;QACjC;QACAR,WAAW,CAAEG,IAAI,IAAKA,IAAI,CAACM,MAAM,CAAEC,GAAG,IAAK,CAACA,GAAG,CAACH,QAAQ,CAAC,CAAC;;QAE1D;QACAI,UAAU,CAAC,MAAM;UACfX,WAAW,CAAEG,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;YAAEC,IAAI,EAAE,EAAE;YAAEC,MAAM,EAAE,KAAK;YAAEO,QAAQ,EAAEJ,QAAQ,CAACA;UAAS,CAAC,CACzD,CAAC;QACJ,CAAC,EAAE,GAAG,CAAC;MACT;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,0EAA0E;IAAAC,QAAA,eACvFpB,OAAA,CAACL,MAAM,CAAC0B,GAAG;MACTC,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAE;MACpCC,OAAO,EAAE;QAAEF,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAE,CAAE;MAClCE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAC9BR,SAAS,EAAC,uDAAuD;MAAAC,QAAA,gBAEjEpB,OAAA;QAAImB,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAC;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxE/B,OAAA,CAACH,WAAW;QAACM,QAAQ,EAAEA;MAAS;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnC/B,OAAA,CAACJ,WAAW;QAACoC,MAAM,EAAE3B;MAAW;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA5CID,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}