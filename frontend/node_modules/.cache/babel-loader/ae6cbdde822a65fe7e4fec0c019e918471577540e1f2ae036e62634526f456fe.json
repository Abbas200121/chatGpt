{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\chatGpt\\\\frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\nimport jsPDF from \"jspdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supportedLanguages = {\n  en: \"en-US\",\n  ar: \"ar-EG\",\n  he: \"he-IL\"\n};\nconst botVoices = {\n  en: \"Google US English\",\n  ar: \"Google ÿßŸÑÿπÿ±ÿ®Ÿäÿ©\",\n  he: \"Google ◊¢◊ë◊®◊ô◊™\"\n};\nconst botName = \"Chatbot\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [chatId, setChatId] = useState(null);\n  const [chats, setChats] = useState([]);\n  const [generateImageMode, setGenerateImageMode] = useState(false);\n  const messagesEndRef = useRef(null);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const navigate = useNavigate();\n  const [darkMode, setDarkMode] = useState(localStorage.getItem(\"theme\") === \"dark\");\n  const [typingBotMessage, setTypingBotMessage] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const recognitionRef = useRef(null);\n  const [language, setLanguage] = useState(\"en\"); // üåê Language state\n  const [isLoading, setIsLoading] = useState(false); // ‚è≥ Bot thinking\n  const [suggestions, setSuggestions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.setItem(\"theme\", \"light\");\n    }\n  }, [darkMode]);\n  const fetchChats = useCallback(async () => {\n    try {\n      const data = await getChats();\n      if (data.chats.length > 0) {\n        setChats(data.chats);\n        setChatId(data.chats[0].id);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n    }\n  }, []);\n  const fetchMessages = useCallback(async selectedChatId => {\n    try {\n      const data = await getMessages(selectedChatId);\n      const formattedMessages = data.map(msg => [{\n        text: msg.content,\n        isUser: true\n      }, {\n        text: msg.response,\n        isUser: false\n      }]).flat();\n      setMessages(formattedMessages);\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/\");\n    } else {\n      fetchChats();\n    }\n  }, [navigate, fetchChats]);\n  useEffect(() => {\n    if (chatId) {\n      fetchMessages(chatId);\n    }\n  }, [chatId, fetchMessages]);\n  useEffect(() => {\n    if (!(\"webkitSpeechRecognition\" in window)) return;\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = supportedLanguages[language]; // üîÑ Dynamic language\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setUserMessage(transcript);\n    };\n    recognition.onerror = () => setIsRecording(false);\n    recognition.onend = () => setIsRecording(false);\n    recognitionRef.current = recognition;\n  }, [language]); // Reactivate when language changes\n\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, typingBotMessage]);\n  const handleNewChat = async () => {\n    try {\n      const response = await createNewChat();\n      const newChat = {\n        id: response.chat_id\n      };\n      setChats(prevChats => [...prevChats, newChat]);\n      setChatId(newChat.id);\n      setMessages([]);\n    } catch (error) {\n      console.error(\"Error creating new chat:\", error);\n    }\n  };\n  const handleSend = async () => {\n    if (!userMessage.trim() || !chatId) return;\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setUserMessage(\"\");\n    setTypingBotMessage(null);\n    setIsLoading(true);\n    setSuggestions([]); // ‚ùå Clear old suggestions\n\n    try {\n      let response;\n      if (generateImageMode) {\n        const res = await fetch(`http://localhost:8000/chats/${chatId}/generate-image`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          },\n          body: JSON.stringify({\n            prompt: userMessage\n          })\n        });\n        response = await res.json();\n      } else {\n        response = await sendMessage(chatId, userMessage);\n      }\n      if (response) {\n        const isImage = generateImageMode;\n        const botReply = isImage ? `<img src=\"${response.response}\" alt=\"Generated\" class=\"rounded-lg max-w-full\" />` : response.response;\n\n        // ‚úèÔ∏è Typing effect\n        let displayed = \"\";\n        const interval = setInterval(() => {\n          displayed = botReply.slice(0, displayed.length + 1);\n          setTypingBotMessage(displayed);\n          if (displayed.length >= botReply.length) {\n            clearInterval(interval);\n            setTypingBotMessage(null);\n            setMessages(prev => [...prev, {\n              text: botReply,\n              isUser: false\n            }]);\n            setIsLoading(false);\n\n            // üîä Speech synthesis (only for text)\n            if (!isImage && window.speechSynthesis) {\n              const utterance = new SpeechSynthesisUtterance(botReply);\n              const selectedVoice = speechSynthesis.getVoices().find(v => v.name === botVoices[language]);\n              if (selectedVoice) utterance.voice = selectedVoice;\n              utterance.lang = supportedLanguages[language];\n              speechSynthesis.speak(utterance);\n            }\n\n            // üí° Fetch AI suggestions (only for text)\n            if (!isImage) {\n              fetch(`http://localhost:8000/chats/${chatId}/suggestions`, {\n                headers: {\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                }\n              }).then(res => res.json()).then(data => setSuggestions(data.suggestions || [])).catch(err => {\n                console.error(\"‚ùå Error fetching suggestions:\", err);\n                setSuggestions([]);\n              });\n            }\n          }\n        }, 30);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prev => [...prev, {\n        text: `Error: ${error.message}`,\n        isUser: false\n      }]);\n      setIsLoading(false);\n      setSuggestions([]);\n    }\n  };\n  const handleExportZip = async () => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      const res = await fetch(\"http://localhost:8000/chats/export-zip\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const blob = await res.blob();\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"chats.zip\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (err) {\n      console.error(\"Export failed:\", err);\n      alert(\"Failed to export chats\");\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    let y = 10;\n    messages.forEach(msg => {\n      const sender = msg.isUser ? \"You\" : botName;\n      const plainText = msg.text.replace(/<[^>]+>/g, \"\"); // strip HTML\n      const line = `${sender}: ${plainText}`;\n      doc.text(line, 10, y);\n      y += 10;\n      if (y > 280) {\n        doc.addPage();\n        y = 10;\n      }\n    });\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center justify-center min-h-screen px-4 py-6 transition ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `max-w-5xl w-full p-6 rounded-2xl shadow-2xl relative border ${darkMode ? \"bg-gray-800 border-gray-700\" : \"bg-white border-gray-300\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold\",\n          children: [\"\\uD83D\\uDCAC Chat with \", botName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExportPDF,\n            className: \"flex items-center gap-2 px-4 py-2 rounded-full bg-yellow-400 hover:bg-yellow-500 text-black font-medium shadow transition duration-200\",\n            children: \"\\uD83D\\uDCC4 Export PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExportZip,\n            className: \"flex items-center gap-2 px-4 py-2 rounded-full bg-purple-600 hover:bg-purple-700 text-white font-medium shadow transition duration-200\",\n            children: \"\\uD83D\\uDCE6 Export ZIP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"flex items-center gap-2 px-4 py-2 rounded-full bg-red-500 hover:bg-red-600 text-white font-semibold shadow transition duration-200\",\n            children: \"\\uD83D\\uDEAA Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap items-center justify-between gap-3 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDarkMode(!darkMode),\n            className: \"px-3 py-2 bg-gray-200 hover:bg-gray-300 text-black rounded-lg shadow-sm\",\n            children: darkMode ? \"‚òÄÔ∏è Light Mode\" : \"üåô Dark Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const next = language === \"en\" ? \"ar\" : language === \"ar\" ? \"he\" : \"en\";\n              setLanguage(next);\n            },\n            className: \"px-3 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg shadow-sm\",\n            children: [\"\\uD83C\\uDF10 \", language.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full sm:w-auto flex-grow\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uD83D\\uDD0D Search messages...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: `w-full px-4 py-2 rounded-lg border focus:outline-none focus:ring-2 ${darkMode ? \"bg-gray-700 text-white border-gray-600 focus:ring-blue-400\" : \"bg-white border-gray-300 focus:ring-blue-500\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-6\",\n        children: [chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setChatId(chat.id);\n            fetchMessages(chat.id);\n          },\n          className: `px-3 py-1 rounded-full font-medium transition ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-300 text-black hover:bg-gray-400\"}`,\n          children: [\"Chat \", index + 1]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewChat,\n          className: \"px-3 py-1 rounded-full bg-green-500 text-white hover:bg-green-600 transition font-medium\",\n          children: \"\\u2795 New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setGenerateImageMode(prev => !prev),\n          className: `px-3 py-1 rounded-full transition font-medium ${generateImageMode ? \"bg-purple-500 text-white\" : \"bg-gray-400 text-black hover:bg-gray-500\"}`,\n          children: generateImageMode ? \"üñº Image Mode\" : \"üí¨ Text Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-96 overflow-y-auto p-4 rounded-xl shadow-inner ${darkMode ? \"bg-gray-700\" : \"bg-gray-100\"}`,\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 30 : -30\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-lg ${msg.isUser ? \"ml-auto bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: searchTerm ? msg.text.replace(new RegExp(`(${searchTerm})`, \"gi\"), '<mark class=\"bg-yellow-300\">$1</mark>') : msg.text\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)), typingBotMessage && /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"p-3 mt-2 rounded-lg max-w-lg bg-gray-600 text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: typingBotMessage\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), isLoading && !typingBotMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 animate-pulse text-gray-400\",\n          children: \"\\uD83E\\uDD16 Bot is typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 7\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-semibold mb-1\",\n          children: \"\\uD83D\\uDCA1 Suggestions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2\",\n          children: suggestions.map((s, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setUserMessage(s),\n            className: \"bg-blue-100 hover:bg-blue-200 text-blue-800 px-3 py-1 rounded-full text-sm font-medium transition\",\n            children: s\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: e => {\n            const file = e.target.files[0];\n            if (file) {\n              const reader = new FileReader();\n              reader.onloadend = () => {\n                const base64Image = reader.result;\n                setUploadedImage(base64Image);\n                setMessages(prev => [...prev, {\n                  text: `<img src=\"${base64Image}\" alt=\"uploaded\" class=\"rounded-lg max-w-full\" />`,\n                  isUser: true\n                }]);\n                (async () => {\n                  try {\n                    await fetch(`http://localhost:8000/chats/${chatId}/upload-image`, {\n                      method: \"POST\",\n                      headers: {\n                        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n                        \"Content-Type\": \"application/json\"\n                      },\n                      body: JSON.stringify({\n                        image: base64Image\n                      })\n                    });\n\n                    // ‚úÖ Wait 8 seconds before fetching updated messages\n                    setTimeout(() => {\n                      fetchMessages(chatId);\n                    }, 8000);\n                  } catch (error) {\n                    console.error(\"Failed to upload image to backend:\", error);\n                  }\n                })();\n              };\n              reader.readAsDataURL(file);\n            }\n          },\n          className: \"hidden\",\n          id: \"imageUpload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageUpload\",\n          className: \"cursor-pointer px-3 py-2 bg-gray-300 hover:bg-gray-400 text-black rounded-lg\",\n          children: \"\\uD83D\\uDCC1 Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend(),\n          placeholder: \"Type your message...\",\n          className: `flex-1 px-4 py-2 rounded-lg outline-none ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!recognitionRef.current) return;\n            if (isRecording) {\n              recognitionRef.current.stop();\n            } else {\n              recognitionRef.current.start();\n            }\n            setIsRecording(!isRecording);\n          },\n          className: `px-3 py-2 rounded-full ${isRecording ? \"bg-red-500\" : \"bg-green-500\"} text-white transition`,\n          children: \"\\uD83C\\uDFA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-full font-medium transition\",\n          children: \"\\uD83D\\uDE80 Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 3\n  }, this);\n};\n_s(Chatbot, \"8TTx0CpzyoWNs1XhivNnFNDaW6M=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","useNavigate","getChats","createNewChat","getMessages","sendMessage","jsPDF","jsxDEV","_jsxDEV","supportedLanguages","en","ar","he","botVoices","botName","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","chatId","setChatId","chats","setChats","generateImageMode","setGenerateImageMode","messagesEndRef","uploadedImage","setUploadedImage","navigate","darkMode","setDarkMode","localStorage","getItem","typingBotMessage","setTypingBotMessage","isRecording","setIsRecording","recognitionRef","language","setLanguage","isLoading","setIsLoading","suggestions","setSuggestions","searchTerm","setSearchTerm","document","documentElement","classList","add","setItem","remove","fetchChats","data","length","id","error","console","fetchMessages","selectedChatId","formattedMessages","map","msg","text","content","isUser","response","flat","token","window","recognition","webkitSpeechRecognition","lang","continuous","interimResults","onresult","event","transcript","results","onerror","onend","current","_messagesEndRef$curre","scrollIntoView","behavior","handleNewChat","newChat","chat_id","prevChats","handleSend","trim","prev","res","fetch","method","headers","Authorization","body","JSON","stringify","prompt","json","isImage","botReply","displayed","interval","setInterval","slice","clearInterval","speechSynthesis","utterance","SpeechSynthesisUtterance","selectedVoice","getVoices","find","v","name","voice","speak","then","catch","err","message","handleExportZip","blob","link","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","alert","handleLogout","removeItem","handleExportPDF","doc","y","forEach","sender","plainText","replace","line","addPage","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","next","toUpperCase","type","placeholder","value","onChange","e","target","chat","index","div","initial","opacity","x","animate","transition","duration","dangerouslySetInnerHTML","__html","RegExp","ref","s","i","accept","file","files","reader","FileReader","onloadend","base64Image","result","image","setTimeout","readAsDataURL","htmlFor","onKeyDown","key","stop","start","_c","$RefreshReg$"],"sources":["C:/Users/moham/chatGpt/frontend/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\r\nimport jsPDF from \"jspdf\";\r\n\r\nconst supportedLanguages = {\r\n  en: \"en-US\",\r\n  ar: \"ar-EG\",\r\n  he: \"he-IL\"\r\n};\r\n\r\nconst botVoices = {\r\n  en: \"Google US English\",\r\n  ar: \"Google ÿßŸÑÿπÿ±ÿ®Ÿäÿ©\",\r\n  he: \"Google ◊¢◊ë◊®◊ô◊™\"\r\n};\r\nconst botName = \"Chatbot\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [chatId, setChatId] = useState(null);\r\n  const [chats, setChats] = useState([]);\r\n  const [generateImageMode, setGenerateImageMode] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [darkMode, setDarkMode] = useState(localStorage.getItem(\"theme\") === \"dark\");\r\n  const [typingBotMessage, setTypingBotMessage] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\nconst recognitionRef = useRef(null);\r\nconst [language, setLanguage] = useState(\"en\");  // üåê Language state\r\nconst [isLoading, setIsLoading] = useState(false); // ‚è≥ Bot thinking\r\nconst [suggestions, setSuggestions] = useState([]);\r\nconst [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const fetchChats = useCallback(async () => {\r\n    try {\r\n      const data = await getChats();\r\n      if (data.chats.length > 0) {\r\n        setChats(data.chats);\r\n        setChatId(data.chats[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchMessages = useCallback(async (selectedChatId) => {\r\n    try {\r\n      const data = await getMessages(selectedChatId);\r\n      const formattedMessages = data.map((msg) => [\r\n        { text: msg.content, isUser: true },\r\n        { text: msg.response, isUser: false },\r\n      ]).flat();\r\n      setMessages(formattedMessages);\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/\");\r\n    } else {\r\n      fetchChats();\r\n    }\r\n  }, [navigate, fetchChats]);\r\n\r\n  useEffect(() => {\r\n    if (chatId) {\r\n      fetchMessages(chatId);\r\n    }\r\n  }, [chatId, fetchMessages]);\r\n\r\n useEffect(() => {\r\n  if (!(\"webkitSpeechRecognition\" in window)) return;\r\n\r\n  const recognition = new window.webkitSpeechRecognition();\r\n  recognition.lang = supportedLanguages[language];  // üîÑ Dynamic language\r\n  recognition.continuous = false;\r\n  recognition.interimResults = false;\r\n\r\n  recognition.onresult = (event) => {\r\n    const transcript = event.results[0][0].transcript;\r\n    setUserMessage(transcript);\r\n  };\r\n\r\n  recognition.onerror = () => setIsRecording(false);\r\n  recognition.onend = () => setIsRecording(false);\r\n\r\n  recognitionRef.current = recognition;\r\n}, [language]); // Reactivate when language changes\r\n\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, typingBotMessage]);\r\n\r\n  const handleNewChat = async () => {\r\n    try {\r\n      const response = await createNewChat();\r\n      const newChat = { id: response.chat_id };\r\n      setChats((prevChats) => [...prevChats, newChat]);\r\n      setChatId(newChat.id);\r\n      setMessages([]);\r\n    } catch (error) {\r\n      console.error(\"Error creating new chat:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n  if (!userMessage.trim() || !chatId) return;\r\n\r\n  setMessages((prev) => [...prev, { text: userMessage, isUser: true }]);\r\n  setUserMessage(\"\");\r\n  setTypingBotMessage(null);\r\n  setIsLoading(true);\r\n  setSuggestions([]); // ‚ùå Clear old suggestions\r\n\r\n  try {\r\n    let response;\r\n\r\n    if (generateImageMode) {\r\n      const res = await fetch(`http://localhost:8000/chats/${chatId}/generate-image`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({ prompt: userMessage }),\r\n      });\r\n      response = await res.json();\r\n    } else {\r\n      response = await sendMessage(chatId, userMessage);\r\n    }\r\n\r\n    if (response) {\r\n      const isImage = generateImageMode;\r\n      const botReply = isImage\r\n        ? `<img src=\"${response.response}\" alt=\"Generated\" class=\"rounded-lg max-w-full\" />`\r\n        : response.response;\r\n\r\n      // ‚úèÔ∏è Typing effect\r\n      let displayed = \"\";\r\n      const interval = setInterval(() => {\r\n        displayed = botReply.slice(0, displayed.length + 1);\r\n        setTypingBotMessage(displayed);\r\n\r\n        if (displayed.length >= botReply.length) {\r\n          clearInterval(interval);\r\n          setTypingBotMessage(null);\r\n          setMessages((prev) => [...prev, { text: botReply, isUser: false }]);\r\n          setIsLoading(false);\r\n\r\n          // üîä Speech synthesis (only for text)\r\n          if (!isImage && window.speechSynthesis) {\r\n            const utterance = new SpeechSynthesisUtterance(botReply);\r\n            const selectedVoice = speechSynthesis\r\n              .getVoices()\r\n              .find((v) => v.name === botVoices[language]);\r\n            if (selectedVoice) utterance.voice = selectedVoice;\r\n            utterance.lang = supportedLanguages[language];\r\n            speechSynthesis.speak(utterance);\r\n          }\r\n\r\n          // üí° Fetch AI suggestions (only for text)\r\n          if (!isImage) {\r\n            fetch(`http://localhost:8000/chats/${chatId}/suggestions`, {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n            })\r\n              .then((res) => res.json())\r\n              .then((data) => setSuggestions(data.suggestions || []))\r\n              .catch((err) => {\r\n                console.error(\"‚ùå Error fetching suggestions:\", err);\r\n                setSuggestions([]);\r\n              });\r\n          }\r\n        }\r\n      }, 30);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    setMessages((prev) => [...prev, { text: `Error: ${error.message}`, isUser: false }]);\r\n    setIsLoading(false);\r\n    setSuggestions([]);\r\n  }\r\n};\r\n\r\nconst handleExportZip = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    const res = await fetch(\"http://localhost:8000/chats/export-zip\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    const blob = await res.blob();\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"chats.zip\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  } catch (err) {\r\n    console.error(\"Export failed:\", err);\r\n    alert(\"Failed to export chats\");\r\n  }\r\n};\r\n\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleExportPDF = () => {\r\n    const doc = new jsPDF();\r\n    let y = 10;\r\n\r\n    messages.forEach((msg) => {\r\n      const sender = msg.isUser ? \"You\" : botName;\r\n      const plainText = msg.text.replace(/<[^>]+>/g, \"\"); // strip HTML\r\n      const line = `${sender}: ${plainText}`;\r\n      doc.text(line, 10, y);\r\n      y += 10;\r\n      if (y > 280) {\r\n        doc.addPage();\r\n        y = 10;\r\n      }\r\n    });\r\n\r\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\r\n  };\r\n\r\n  return (\r\n  <div className={`flex flex-col items-center justify-center min-h-screen px-4 py-6 transition ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`}>\r\n    <div className={`max-w-5xl w-full p-6 rounded-2xl shadow-2xl relative border ${darkMode ? \"bg-gray-800 border-gray-700\" : \"bg-white border-gray-300\"}`}>\r\n\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-3xl font-bold\">üí¨ Chat with {botName}</h2>\r\n<div className=\"flex justify-end gap-4 mb-4\">\r\n  <button\r\n    onClick={handleExportPDF}\r\n    className=\"flex items-center gap-2 px-4 py-2 rounded-full bg-yellow-400 hover:bg-yellow-500 text-black font-medium shadow transition duration-200\"\r\n  >\r\n    üìÑ Export PDF\r\n  </button>\r\n\r\n  <button\r\n    onClick={handleExportZip}\r\n    className=\"flex items-center gap-2 px-4 py-2 rounded-full bg-purple-600 hover:bg-purple-700 text-white font-medium shadow transition duration-200\"\r\n  >\r\n    üì¶ Export ZIP\r\n  </button>\r\n\r\n  <button\r\n    onClick={handleLogout}\r\n    className=\"flex items-center gap-2 px-4 py-2 rounded-full bg-red-500 hover:bg-red-600 text-white font-semibold shadow transition duration-200\"\r\n  >\r\n    üö™ Logout\r\n  </button>\r\n</div>\r\n\r\n      </div>\r\n\r\n      {/* Top Controls */}\r\n      <div className=\"flex flex-wrap items-center justify-between gap-3 mb-4\">\r\n        <div className=\"flex gap-2\">\r\n          <button onClick={() => setDarkMode(!darkMode)} className=\"px-3 py-2 bg-gray-200 hover:bg-gray-300 text-black rounded-lg shadow-sm\">\r\n            {darkMode ? \"‚òÄÔ∏è Light Mode\" : \"üåô Dark Mode\"}\r\n          </button>\r\n          \r\n          <button\r\n            onClick={() => {\r\n              const next = language === \"en\" ? \"ar\" : language === \"ar\" ? \"he\" : \"en\";\r\n              setLanguage(next);\r\n            }}\r\n            className=\"px-3 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg shadow-sm\"\r\n          >\r\n            üåê {language.toUpperCase()}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Search bar */}\r\n        <div className=\"w-full sm:w-auto flex-grow\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"üîç Search messages...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className={`w-full px-4 py-2 rounded-lg border focus:outline-none focus:ring-2 ${darkMode ? \"bg-gray-700 text-white border-gray-600 focus:ring-blue-400\" : \"bg-white border-gray-300 focus:ring-blue-500\"}`}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chat Selector */}\r\n      <div className=\"flex flex-wrap gap-2 mb-6\">\r\n        {chats.map((chat, index) => (\r\n          <button key={chat.id} onClick={() => { setChatId(chat.id); fetchMessages(chat.id); }}\r\n            className={`px-3 py-1 rounded-full font-medium transition ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-300 text-black hover:bg-gray-400\"}`}>\r\n            Chat {index + 1}\r\n          </button>\r\n        ))}\r\n        <button onClick={handleNewChat} className=\"px-3 py-1 rounded-full bg-green-500 text-white hover:bg-green-600 transition font-medium\">‚ûï New Chat</button>\r\n        <button onClick={() => setGenerateImageMode(prev => !prev)}\r\n          className={`px-3 py-1 rounded-full transition font-medium ${generateImageMode ? \"bg-purple-500 text-white\" : \"bg-gray-400 text-black hover:bg-gray-500\"}`}>\r\n          {generateImageMode ? \"üñº Image Mode\" : \"üí¨ Text Mode\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Messages List */}\r\n      <div className={`h-96 overflow-y-auto p-4 rounded-xl shadow-inner ${darkMode ? \"bg-gray-700\" : \"bg-gray-100\"}`}>\r\n        {messages.map((msg, index) => (\r\n          <motion.div key={index} initial={{ opacity: 0, x: msg.isUser ? 30 : -30 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.3 }}\r\n            className={`p-3 rounded-lg max-w-lg ${msg.isUser ? \"ml-auto bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`}>\r\n            <strong>{msg.isUser ? \"You\" : botName}:</strong>{\" \"}\r\n            <span\r\n              dangerouslySetInnerHTML={{\r\n                __html: searchTerm\r\n                  ? msg.text.replace(new RegExp(`(${searchTerm})`, \"gi\"), '<mark class=\"bg-yellow-300\">$1</mark>')\r\n                  : msg.text,\r\n              }}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n        {typingBotMessage && (\r\n          <motion.div className=\"p-3 mt-2 rounded-lg max-w-lg bg-gray-600 text-white\">\r\n            <strong>{botName}:</strong>{\" \"}\r\n            <span dangerouslySetInnerHTML={{ __html: typingBotMessage }} />\r\n          </motion.div>\r\n        )}\r\n        {isLoading && !typingBotMessage && (\r\n          <p className=\"mt-2 animate-pulse text-gray-400\">ü§ñ Bot is typing...</p>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Suggestions */}\r\n      {suggestions.length > 0 && (\r\n        <div className=\"mt-4\">\r\n          <p className=\"text-sm font-semibold mb-1\">üí° Suggestions:</p>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {suggestions.map((s, i) => (\r\n              <button key={i} onClick={() => setUserMessage(s)}\r\n                className=\"bg-blue-100 hover:bg-blue-200 text-blue-800 px-3 py-1 rounded-full text-sm font-medium transition\">\r\n                {s}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Input Area */}\r\n      <div className=\"flex items-center gap-2 mt-6\">\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={(e) => {\r\n            const file = e.target.files[0];\r\n            if (file) {\r\n              const reader = new FileReader();\r\n              reader.onloadend = () => {\r\n                const base64Image = reader.result;\r\n                setUploadedImage(base64Image);\r\n                setMessages((prev) => [...prev, {\r\n                  text: `<img src=\"${base64Image}\" alt=\"uploaded\" class=\"rounded-lg max-w-full\" />`, isUser: true\r\n                }]);\r\n                (async () => {\r\n  try {\r\n    await fetch(`http://localhost:8000/chats/${chatId}/upload-image`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ image: base64Image }),\r\n    });\r\n\r\n    // ‚úÖ Wait 8 seconds before fetching updated messages\r\n    setTimeout(() => {\r\n      fetchMessages(chatId);\r\n    }, 8000);\r\n\r\n  } catch (error) {\r\n    console.error(\"Failed to upload image to backend:\", error);\r\n  }\r\n})();\r\n\r\n              };\r\n              reader.readAsDataURL(file);\r\n            }\r\n          }}\r\n          className=\"hidden\"\r\n          id=\"imageUpload\"\r\n        />\r\n        <label htmlFor=\"imageUpload\" className=\"cursor-pointer px-3 py-2 bg-gray-300 hover:bg-gray-400 text-black rounded-lg\">\r\n          üìÅ Upload Image\r\n        </label>\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={userMessage}\r\n          onChange={(e) => setUserMessage(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n          placeholder=\"Type your message...\"\r\n          className={`flex-1 px-4 py-2 rounded-lg outline-none ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`}\r\n        />\r\n\r\n        <button\r\n          onClick={() => {\r\n            if (!recognitionRef.current) return;\r\n            if (isRecording) {\r\n              recognitionRef.current.stop();\r\n            } else {\r\n              recognitionRef.current.start();\r\n            }\r\n            setIsRecording(!isRecording);\r\n          }}\r\n          className={`px-3 py-2 rounded-full ${isRecording ? \"bg-red-500\" : \"bg-green-500\"} text-white transition`}\r\n        >\r\n          üé§\r\n        </button>\r\n\r\n        <button onClick={handleSend} className=\"px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-full font-medium transition\">\r\n          üöÄ Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}