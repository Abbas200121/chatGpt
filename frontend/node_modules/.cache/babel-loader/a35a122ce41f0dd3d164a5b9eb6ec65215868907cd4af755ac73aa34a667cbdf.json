{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\chatGpt\\\\frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUserChats, createNewChat, getChatMessages, sendMessage, logout } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"Chatbot\";\nconst Chatbot = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Fetch all chats for the logged-in user\n  const fetchChats = useCallback(async () => {\n    try {\n      const userChats = await getUserChats();\n      setChats(userChats);\n      if (userChats.length > 0) {\n        selectChat(userChats[0].id);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/\");\n    } else {\n      fetchChats();\n    }\n  }, [navigate, fetchChats]);\n  const selectChat = async chatId => {\n    setSelectedChat(chatId);\n    const chatMessages = await getChatMessages(chatId);\n    setMessages(chatMessages);\n  };\n  const handleNewChat = async () => {\n    try {\n      const newChat = await createNewChat();\n      setChats(prev => [...prev, newChat]);\n      selectChat(newChat.id);\n    } catch (error) {\n      console.error(\"Error creating new chat:\", error);\n    }\n  };\n  const handleSend = async () => {\n    if (!userMessage.trim()) return;\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setUserMessage(\"\");\n    try {\n      const response = await sendMessage(selectedChat, userMessage);\n      setMessages(prev => [...prev, {\n        text: response.response,\n        isUser: false\n      }]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: [\"Chat with \", botName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          logout();\n          navigate(\"/\");\n        },\n        className: \"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewChat,\n        className: \"w-full p-2 bg-green-500 rounded-lg text-white mb-4\",\n        children: \"Start New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold\",\n          children: \"Previous Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-2\",\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectChat(chat.id),\n            className: `p-2 cursor-pointer rounded-lg ${selectedChat === chat.id ? \"bg-blue-500 text-white\" : \"bg-gray-700 text-gray-300\"}`,\n            children: [\"Chat \", chat.id]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 50 : -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), \" \", msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend(),\n          placeholder: \"Type your message...\",\n          className: \"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-2 p-2 bg-blue-500 rounded-full text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"HujSsLZXSAeX0OlESKIdKU3in18=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","useNavigate","getUserChats","createNewChat","getChatMessages","sendMessage","logout","jsxDEV","_jsxDEV","botName","Chatbot","_s","chats","setChats","selectedChat","setSelectedChat","messages","setMessages","userMessage","setUserMessage","messagesEndRef","navigate","fetchChats","userChats","length","selectChat","id","error","console","token","localStorage","getItem","chatId","chatMessages","handleNewChat","newChat","prev","handleSend","trim","text","isUser","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","chat","msg","index","div","initial","opacity","x","animate","transition","duration","ref","type","value","onChange","e","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/moham/chatGpt/frontend/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getUserChats, createNewChat, getChatMessages, sendMessage, logout } from \"../services/api\";\r\n\r\nconst botName = \"Chatbot\";\r\n\r\nconst Chatbot = () => {\r\n  const [chats, setChats] = useState([]);\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch all chats for the logged-in user\r\n  const fetchChats = useCallback(async () => {\r\n    try {\r\n      const userChats = await getUserChats();\r\n      setChats(userChats);\r\n      if (userChats.length > 0) {\r\n        selectChat(userChats[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/\");\r\n    } else {\r\n      fetchChats();\r\n    }\r\n  }, [navigate, fetchChats]);\r\n\r\n  const selectChat = async (chatId) => {\r\n    setSelectedChat(chatId);\r\n    const chatMessages = await getChatMessages(chatId);\r\n    setMessages(chatMessages);\r\n  };\r\n\r\n  const handleNewChat = async () => {\r\n    try {\r\n      const newChat = await createNewChat();\r\n      setChats((prev) => [...prev, newChat]);\r\n      selectChat(newChat.id);\r\n    } catch (error) {\r\n      console.error(\"Error creating new chat:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!userMessage.trim()) return;\r\n\r\n    setMessages((prev) => [...prev, { text: userMessage, isUser: true }]);\r\n    setUserMessage(\"\");\r\n\r\n    try {\r\n      const response = await sendMessage(selectedChat, userMessage);\r\n      setMessages((prev) => [...prev, { text: response.response, isUser: false }]);\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\">\r\n      <div className=\"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg relative\">\r\n        <h2 className=\"text-center text-2xl font-bold mb-4\">Chat with {botName}</h2>\r\n        \r\n        {/* Logout Button */}\r\n        <button\r\n          onClick={() => {\r\n            logout();\r\n            navigate(\"/\");\r\n          }}\r\n          className=\"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\"\r\n        >\r\n          Logout\r\n        </button>\r\n        \r\n        {/* Button to create a new chat */}\r\n        <button\r\n          onClick={handleNewChat}\r\n          className=\"w-full p-2 bg-green-500 rounded-lg text-white mb-4\"\r\n        >\r\n          Start New Chat\r\n        </button>\r\n        \r\n        {/* List of previous chats */}\r\n        <div className=\"mb-4\">\r\n          <h3 className=\"text-lg font-bold\">Previous Chats</h3>\r\n          <ul className=\"space-y-2\">\r\n            {chats.map((chat) => (\r\n              <li\r\n                key={chat.id}\r\n                onClick={() => selectChat(chat.id)}\r\n                className={`p-2 cursor-pointer rounded-lg ${\r\n                  selectedChat === chat.id ? \"bg-blue-500 text-white\" : \"bg-gray-700 text-gray-300\"\r\n                }`}\r\n              >\r\n                Chat {chat.id}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        \r\n        {/* Messages list */}\r\n        <div className=\"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\">\r\n          {messages.map((msg, index) => (\r\n            <motion.div\r\n              key={index}\r\n              initial={{ opacity: 0, x: msg.isUser ? 50 : -50 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className={`p-3 rounded-lg max-w-xs ${\r\n                msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"\r\n              }`}\r\n            >\r\n              <strong>{msg.isUser ? \"You\" : botName}:</strong> {msg.text}\r\n            </motion.div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        \r\n        {/* Input field */}\r\n        <div className=\"flex items-center mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={userMessage}\r\n            onChange={(e) => setUserMessage(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n            placeholder=\"Type your message...\"\r\n            className=\"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\r\n          />\r\n          <button onClick={handleSend} className=\"ml-2 p-2 bg-blue-500 rounded-full text-white\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}