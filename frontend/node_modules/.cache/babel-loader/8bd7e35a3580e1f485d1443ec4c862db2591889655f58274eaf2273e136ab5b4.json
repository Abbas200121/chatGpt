{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\chatGpt\\\\frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\nimport jsPDF from \"jspdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supportedLanguages = {\n  en: \"en-US\",\n  ar: \"ar-EG\",\n  he: \"he-IL\"\n};\nconst botVoices = {\n  en: \"Google US English\",\n  ar: \"Google العربية\",\n  he: \"Google עברית\"\n};\nconst botName = \"Chatbot\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [chatId, setChatId] = useState(null);\n  const [chats, setChats] = useState([]);\n  const [generateImageMode, setGenerateImageMode] = useState(false);\n  const messagesEndRef = useRef(null);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const navigate = useNavigate();\n  const [darkMode, setDarkMode] = useState(localStorage.getItem(\"theme\") === \"dark\");\n  const [typingBotMessage, setTypingBotMessage] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const recognitionRef = useRef(null);\n  const [language, setLanguage] = useState(\"en\"); // 🌐 Language state\n  const [isLoading, setIsLoading] = useState(false); // ⏳ Bot thinking\n\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.setItem(\"theme\", \"light\");\n    }\n  }, [darkMode]);\n  const fetchChats = useCallback(async () => {\n    try {\n      const data = await getChats();\n      if (data.chats.length > 0) {\n        setChats(data.chats);\n        setChatId(data.chats[0].id);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n    }\n  }, []);\n  const fetchMessages = useCallback(async selectedChatId => {\n    try {\n      const data = await getMessages(selectedChatId);\n      const formattedMessages = data.map(msg => [{\n        text: msg.content,\n        isUser: true\n      }, {\n        text: msg.response,\n        isUser: false\n      }]).flat();\n      setMessages(formattedMessages);\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/\");\n    } else {\n      fetchChats();\n    }\n  }, [navigate, fetchChats]);\n  useEffect(() => {\n    if (chatId) {\n      fetchMessages(chatId);\n    }\n  }, [chatId, fetchMessages]);\n  useEffect(() => {\n    if (!(\"webkitSpeechRecognition\" in window)) return;\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = supportedLanguages[language]; // 🔄 Dynamic language\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setUserMessage(transcript);\n    };\n    recognition.onerror = () => setIsRecording(false);\n    recognition.onend = () => setIsRecording(false);\n    recognitionRef.current = recognition;\n  }, [language]); // Reactivate when language changes\n\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, typingBotMessage]);\n  const handleNewChat = async () => {\n    try {\n      const response = await createNewChat();\n      const newChat = {\n        id: response.chat_id\n      };\n      setChats(prevChats => [...prevChats, newChat]);\n      setChatId(newChat.id);\n      setMessages([]);\n    } catch (error) {\n      console.error(\"Error creating new chat:\", error);\n    }\n  };\n  const handleSend = async () => {\n    if (!userMessage.trim() || !chatId) return;\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setUserMessage(\"\");\n    setTypingBotMessage(null);\n    setIsLoading(true);\n    try {\n      let response;\n      if (generateImageMode) {\n        const res = await fetch(`http://localhost:8000/chats/${chatId}/generate-image`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          },\n          body: JSON.stringify({\n            prompt: userMessage\n          })\n        });\n        response = await res.json();\n      } else {\n        response = await sendMessage(chatId, userMessage);\n      }\n      if (response) {\n        const isImage = generateImageMode;\n        const botReply = isImage ? `<img src=\"${response.response}\" alt=\"Generated\" class=\"rounded-lg max-w-full\" />` : response.response;\n\n        // Typing effect\n        let displayed = \"\";\n        const interval = setInterval(() => {\n          displayed = botReply.slice(0, displayed.length + 1);\n          setTypingBotMessage(displayed);\n          if (displayed.length >= botReply.length) {\n            clearInterval(interval);\n            setTypingBotMessage(null);\n            setMessages(prev => [...prev, {\n              text: botReply,\n              isUser: false\n            }]);\n            setIsLoading(false);\n\n            // 🗣 Speak reply (skip images)\n            if (!isImage && window.speechSynthesis) {\n              const utterance = new SpeechSynthesisUtterance(botReply);\n              const selectedVoice = speechSynthesis.getVoices().find(v => v.name === botVoices[language]);\n              if (selectedVoice) utterance.voice = selectedVoice;\n              utterance.lang = supportedLanguages[language];\n              speechSynthesis.speak(utterance);\n            }\n          }\n        }, 30);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prev => [...prev, {\n        text: `Error: ${error.message}`,\n        isUser: false\n      }]);\n      setIsLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    let y = 10;\n    messages.forEach(msg => {\n      const sender = msg.isUser ? \"You\" : botName;\n      const plainText = msg.text.replace(/<[^>]+>/g, \"\"); // strip HTML\n      const line = `${sender}: ${plainText}`;\n      doc.text(line, 10, y);\n      y += 10;\n      if (y > 280) {\n        doc.addPage();\n        y = 10;\n      }\n    });\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center justify-center min-h-screen p-4 ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `max-w-4xl w-full p-6 rounded-lg shadow-lg relative ${darkMode ? \"bg-gray-800\" : \"bg-white\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: [\"Chat with \", botName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        className: `absolute top-4 left-4 p-2 rounded-lg ${darkMode ? \"bg-gray-200 text-black\" : \"bg-gray-800 text-white\"}`,\n        children: darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportPDF,\n        className: \"absolute top-4 right-28 p-2 bg-yellow-500 text-black rounded-lg\",\n        children: \"Export PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4 mt-8\",\n        children: [chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setChatId(chat.id);\n            fetchMessages(chat.id);\n          },\n          className: `p-2 rounded-lg ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`,\n          children: [\"Chat \", index + 1]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewChat,\n          className: \"p-2 bg-green-500 rounded-lg text-white\",\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setGenerateImageMode(prev => !prev),\n          className: `p-2 rounded-lg ${generateImageMode ? \"bg-purple-500 text-white\" : \"bg-gray-400 text-black\"}`,\n          children: generateImageMode ? \"🖼 Image Mode ON\" : \"💬 Text Mode ON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-96 overflow-y-auto p-4 space-y-4 rounded-lg ${darkMode ? \"bg-gray-700\" : \"bg-gray-200\"}`,\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 50 : -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: msg.text\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)), typingBotMessage && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: \"p-3 rounded-lg max-w-xs bg-gray-600 text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), \" \", typingBotMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: e => {\n            const file = e.target.files[0];\n            if (file) {\n              const reader = new FileReader();\n              reader.onloadend = () => {\n                const base64Image = reader.result;\n\n                // Show in chat\n                setUploadedImage(base64Image);\n                setMessages(prev => [...prev, {\n                  text: `<img src=\"${base64Image}\" alt=\"uploaded\" class=\"rounded-lg max-w-full\" />`,\n                  isUser: true\n                }]);\n\n                // 🔁 Send to backend\n                (async () => {\n                  try {\n                    await fetch(`http://localhost:8000/chats/${chatId}/upload-image`, {\n                      method: \"POST\",\n                      headers: {\n                        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n                        \"Content-Type\": \"application/json\"\n                      },\n                      body: JSON.stringify({\n                        image: base64Image\n                      })\n                    });\n                  } catch (error) {\n                    console.error(\"Failed to upload image to backend:\", error);\n                  }\n                })();\n              };\n              reader.readAsDataURL(file);\n            }\n          },\n          className: \"ml-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend(),\n          placeholder: \"Type your message...\",\n          className: `flex-1 p-3 rounded-lg outline-none ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const next = language === \"en\" ? \"ar\" : language === \"ar\" ? \"he\" : \"en\";\n            setLanguage(next);\n          },\n          className: \"absolute top-4 left-24 p-2 bg-indigo-500 text-white rounded-lg\",\n          children: [\"\\uD83C\\uDF10 \", language.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!recognitionRef.current) return;\n            if (isRecording) {\n              recognitionRef.current.stop();\n            } else {\n              recognitionRef.current.start();\n            }\n            setIsRecording(!isRecording);\n          },\n          className: `ml-2 p-2 rounded-full ${isRecording ? \"bg-red-500\" : \"bg-green-500\"} text-white`,\n          title: \"Microphone\",\n          children: \"\\uD83C\\uDFA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-2 p-2 bg-blue-500 rounded-full text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"o1mhozmfjrqFryRcfnpwzQisIZE=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","useNavigate","getChats","createNewChat","getMessages","sendMessage","jsPDF","jsxDEV","_jsxDEV","supportedLanguages","en","ar","he","botVoices","botName","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","chatId","setChatId","chats","setChats","generateImageMode","setGenerateImageMode","messagesEndRef","uploadedImage","setUploadedImage","navigate","darkMode","setDarkMode","localStorage","getItem","typingBotMessage","setTypingBotMessage","isRecording","setIsRecording","recognitionRef","language","setLanguage","isLoading","setIsLoading","document","documentElement","classList","add","setItem","remove","fetchChats","data","length","id","error","console","fetchMessages","selectedChatId","formattedMessages","map","msg","text","content","isUser","response","flat","token","window","recognition","webkitSpeechRecognition","lang","continuous","interimResults","onresult","event","transcript","results","onerror","onend","current","_messagesEndRef$curre","scrollIntoView","behavior","handleNewChat","newChat","chat_id","prevChats","handleSend","trim","prev","res","fetch","method","headers","Authorization","body","JSON","stringify","prompt","json","isImage","botReply","displayed","interval","setInterval","slice","clearInterval","speechSynthesis","utterance","SpeechSynthesisUtterance","selectedVoice","getVoices","find","v","name","voice","speak","message","handleLogout","removeItem","handleExportPDF","doc","y","forEach","sender","plainText","replace","line","addPage","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","chat","index","div","initial","opacity","x","animate","transition","duration","dangerouslySetInnerHTML","__html","ref","type","accept","onChange","e","file","target","files","reader","FileReader","onloadend","base64Image","result","image","readAsDataURL","value","onKeyDown","key","placeholder","next","toUpperCase","stop","start","title","_c","$RefreshReg$"],"sources":["C:/Users/moham/chatGpt/frontend/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getChats, createNewChat, getMessages, sendMessage } from \"../services/api\";\r\nimport jsPDF from \"jspdf\";\r\n\r\nconst supportedLanguages = {\r\n  en: \"en-US\",\r\n  ar: \"ar-EG\",\r\n  he: \"he-IL\"\r\n};\r\n\r\nconst botVoices = {\r\n  en: \"Google US English\",\r\n  ar: \"Google العربية\",\r\n  he: \"Google עברית\"\r\n};\r\nconst botName = \"Chatbot\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [chatId, setChatId] = useState(null);\r\n  const [chats, setChats] = useState([]);\r\n  const [generateImageMode, setGenerateImageMode] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [darkMode, setDarkMode] = useState(localStorage.getItem(\"theme\") === \"dark\");\r\n  const [typingBotMessage, setTypingBotMessage] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\nconst recognitionRef = useRef(null);\r\nconst [language, setLanguage] = useState(\"en\");  // 🌐 Language state\r\nconst [isLoading, setIsLoading] = useState(false); // ⏳ Bot thinking\r\n\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const fetchChats = useCallback(async () => {\r\n    try {\r\n      const data = await getChats();\r\n      if (data.chats.length > 0) {\r\n        setChats(data.chats);\r\n        setChatId(data.chats[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchMessages = useCallback(async (selectedChatId) => {\r\n    try {\r\n      const data = await getMessages(selectedChatId);\r\n      const formattedMessages = data.map((msg) => [\r\n        { text: msg.content, isUser: true },\r\n        { text: msg.response, isUser: false },\r\n      ]).flat();\r\n      setMessages(formattedMessages);\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/\");\r\n    } else {\r\n      fetchChats();\r\n    }\r\n  }, [navigate, fetchChats]);\r\n\r\n  useEffect(() => {\r\n    if (chatId) {\r\n      fetchMessages(chatId);\r\n    }\r\n  }, [chatId, fetchMessages]);\r\n\r\n useEffect(() => {\r\n  if (!(\"webkitSpeechRecognition\" in window)) return;\r\n\r\n  const recognition = new window.webkitSpeechRecognition();\r\n  recognition.lang = supportedLanguages[language];  // 🔄 Dynamic language\r\n  recognition.continuous = false;\r\n  recognition.interimResults = false;\r\n\r\n  recognition.onresult = (event) => {\r\n    const transcript = event.results[0][0].transcript;\r\n    setUserMessage(transcript);\r\n  };\r\n\r\n  recognition.onerror = () => setIsRecording(false);\r\n  recognition.onend = () => setIsRecording(false);\r\n\r\n  recognitionRef.current = recognition;\r\n}, [language]); // Reactivate when language changes\r\n\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, typingBotMessage]);\r\n\r\n  const handleNewChat = async () => {\r\n    try {\r\n      const response = await createNewChat();\r\n      const newChat = { id: response.chat_id };\r\n      setChats((prevChats) => [...prevChats, newChat]);\r\n      setChatId(newChat.id);\r\n      setMessages([]);\r\n    } catch (error) {\r\n      console.error(\"Error creating new chat:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n  if (!userMessage.trim() || !chatId) return;\r\n  setMessages((prev) => [...prev, { text: userMessage, isUser: true }]);\r\n  setUserMessage(\"\");\r\n  setTypingBotMessage(null);\r\n  setIsLoading(true);\r\n\r\n  try {\r\n    let response;\r\n    if (generateImageMode) {\r\n      const res = await fetch(`http://localhost:8000/chats/${chatId}/generate-image`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({ prompt: userMessage }),\r\n      });\r\n      response = await res.json();\r\n    } else {\r\n      response = await sendMessage(chatId, userMessage);\r\n    }\r\n\r\n    if (response) {\r\n      const isImage = generateImageMode;\r\n      const botReply = isImage\r\n        ? `<img src=\"${response.response}\" alt=\"Generated\" class=\"rounded-lg max-w-full\" />`\r\n        : response.response;\r\n\r\n      // Typing effect\r\n      let displayed = \"\";\r\n      const interval = setInterval(() => {\r\n        displayed = botReply.slice(0, displayed.length + 1);\r\n        setTypingBotMessage(displayed);\r\n\r\n        if (displayed.length >= botReply.length) {\r\n          clearInterval(interval);\r\n          setTypingBotMessage(null);\r\n          setMessages((prev) => [...prev, { text: botReply, isUser: false }]);\r\n          setIsLoading(false);\r\n\r\n          // 🗣 Speak reply (skip images)\r\n          if (!isImage && window.speechSynthesis) {\r\n            const utterance = new SpeechSynthesisUtterance(botReply);\r\n            const selectedVoice = speechSynthesis.getVoices().find(v => v.name === botVoices[language]);\r\n            if (selectedVoice) utterance.voice = selectedVoice;\r\n            utterance.lang = supportedLanguages[language];\r\n            speechSynthesis.speak(utterance);\r\n          }\r\n        }\r\n      }, 30);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    setMessages((prev) => [...prev, { text: `Error: ${error.message}`, isUser: false }]);\r\n    setIsLoading(false);\r\n  }\r\n};\r\n\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleExportPDF = () => {\r\n    const doc = new jsPDF();\r\n    let y = 10;\r\n\r\n    messages.forEach((msg) => {\r\n      const sender = msg.isUser ? \"You\" : botName;\r\n      const plainText = msg.text.replace(/<[^>]+>/g, \"\"); // strip HTML\r\n      const line = `${sender}: ${plainText}`;\r\n      doc.text(line, 10, y);\r\n      y += 10;\r\n      if (y > 280) {\r\n        doc.addPage();\r\n        y = 10;\r\n      }\r\n    });\r\n\r\n    doc.save(`chat-${chatId || \"export\"}.pdf`);\r\n  };\r\n\r\n  return (\r\n    <div className={`flex flex-col items-center justify-center min-h-screen p-4 ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-black\"}`}>\r\n      <div className={`max-w-4xl w-full p-6 rounded-lg shadow-lg relative ${darkMode ? \"bg-gray-800\" : \"bg-white\"}`}>\r\n\r\n        <h2 className=\"text-center text-2xl font-bold mb-4\">Chat with {botName}</h2>\r\n\r\n        <button onClick={() => setDarkMode(!darkMode)} className={`absolute top-4 left-4 p-2 rounded-lg ${darkMode ? \"bg-gray-200 text-black\" : \"bg-gray-800 text-white\"}`}>\r\n          {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n        </button>\r\n\r\n        <button onClick={handleLogout} className=\"absolute top-4 right-4 p-2 bg-red-500 text-white rounded-lg\">Logout</button>\r\n        <button onClick={handleExportPDF} className=\"absolute top-4 right-28 p-2 bg-yellow-500 text-black rounded-lg\">Export PDF</button>\r\n\r\n        <div className=\"flex flex-wrap gap-2 mb-4 mt-8\">\r\n          {chats.map((chat, index) => (\r\n            <button key={chat.id} onClick={() => { setChatId(chat.id); fetchMessages(chat.id); }} className={`p-2 rounded-lg ${chat.id === chatId ? \"bg-blue-500 text-white\" : \"bg-gray-600 text-white\"}`}>\r\n              Chat {index + 1}\r\n            </button>\r\n          ))}\r\n          <button onClick={handleNewChat} className=\"p-2 bg-green-500 rounded-lg text-white\">New Chat</button>\r\n          <button onClick={() => setGenerateImageMode((prev) => !prev)} className={`p-2 rounded-lg ${generateImageMode ? \"bg-purple-500 text-white\" : \"bg-gray-400 text-black\"}`}>\r\n            {generateImageMode ? \"🖼 Image Mode ON\" : \"💬 Text Mode ON\"}\r\n          </button>\r\n        </div>\r\n\r\n        <div className={`h-96 overflow-y-auto p-4 space-y-4 rounded-lg ${darkMode ? \"bg-gray-700\" : \"bg-gray-200\"}`}>\r\n          {messages.map((msg, index) => (\r\n            <motion.div key={index} initial={{ opacity: 0, x: msg.isUser ? 50 : -50 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.3 }}\r\n              className={`p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`}>\r\n              <strong>{msg.isUser ? \"You\" : botName}:</strong>{\" \"}\r\n              <span dangerouslySetInnerHTML={{ __html: msg.text }} />\r\n            </motion.div>\r\n          ))}\r\n          {typingBotMessage && (\r\n            <motion.div initial={{ opacity: 0, x: -50 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.3 }}\r\n              className=\"p-3 rounded-lg max-w-xs bg-gray-600 text-white\">\r\n              <strong>{botName}:</strong> {typingBotMessage}\r\n            </motion.div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"flex items-center mt-4\">\r\n       <input\r\n  type=\"file\"\r\n  accept=\"image/*\"\r\n  onChange={(e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n\r\n        // Show in chat\r\n        setUploadedImage(base64Image);\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { text: `<img src=\"${base64Image}\" alt=\"uploaded\" class=\"rounded-lg max-w-full\" />`, isUser: true },\r\n        ]);\r\n\r\n        // 🔁 Send to backend\r\n        (async () => {\r\n          try {\r\n            await fetch(`http://localhost:8000/chats/${chatId}/upload-image`, {\r\n              method: \"POST\",\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify({ image: base64Image }),\r\n            });\r\n          } catch (error) {\r\n            console.error(\"Failed to upload image to backend:\", error);\r\n          }\r\n        })();\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }}\r\n  className=\"ml-2\"\r\n/>\r\n\r\n\r\n          <input type=\"text\" value={userMessage} onChange={(e) => setUserMessage(e.target.value)} onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n            placeholder=\"Type your message...\" className={`flex-1 p-3 rounded-lg outline-none ${darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-black\"}`} />\r\n            <button\r\n  onClick={() => {\r\n    const next = language === \"en\" ? \"ar\" : language === \"ar\" ? \"he\" : \"en\";\r\n    setLanguage(next);\r\n  }}\r\n  className=\"absolute top-4 left-24 p-2 bg-indigo-500 text-white rounded-lg\"\r\n>\r\n  🌐 {language.toUpperCase()}\r\n</button>\r\n\r\n            <button\r\n  onClick={() => {\r\n    if (!recognitionRef.current) return;\r\n    if (isRecording) {\r\n      recognitionRef.current.stop();\r\n    } else {\r\n      recognitionRef.current.start();\r\n    }\r\n    setIsRecording(!isRecording);\r\n  }}\r\n  className={`ml-2 p-2 rounded-full ${isRecording ? \"bg-red-500\" : \"bg-green-500\"} text-white`}\r\n  title=\"Microphone\"\r\n>\r\n  🎤\r\n</button>\r\n\r\n          <button onClick={handleSend} className=\"ml-2 p-2 bg-blue-500 rounded-full text-white\">Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}