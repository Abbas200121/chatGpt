{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\message-app\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // ✅ Import navigation\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"Chatbot\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [typingMessage, setTypingMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate(); // ✅ Hook for navigation\n\n  // ✅ Check if user is authenticated\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/\"); // Redirect to login if no token\n    }\n  }, [navigate]); // Runs once when component mounts\n\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, typingMessage]);\n  const handleSend = async () => {\n    if (!userMessage.trim()) return;\n    const token = localStorage.getItem(\"token\");\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setUserMessage(\"\");\n    try {\n      setIsTyping(true);\n      setTypingMessage(\"AI is typing...\");\n      const response = await fetch(\"http://localhost:8000/message\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          content: userMessage\n        })\n      });\n      if (response.status === 401) {\n        throw new Error(\"Unauthorized: Please log in again.\");\n      }\n      const data = await response.json();\n      const aiResponse = data.response;\n      setTypingMessage(\"\");\n      setIsTyping(false);\n      simulateTyping(aiResponse);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        text: `Error: ${error.message}`,\n        isUser: false\n      }]);\n      setIsTyping(false);\n    }\n  };\n  const simulateTyping = text => {\n    setTypingMessage(\"\");\n    let index = text.length;\n    const typingInterval = setInterval(() => {\n      if (index === 0) {\n        clearInterval(typingInterval);\n        setMessages(prev => [...prev, {\n          text,\n          isUser: false\n        }]);\n      } else {\n        setTypingMessage(text.slice(index - 1));\n        index--;\n      }\n    }, 50);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: [\"Chat with \", botName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 50 : -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), \" \", msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            duration: 0.3,\n            repeat: Infinity\n          },\n          className: \"p-3 bg-gray-600 text-white rounded-lg max-w-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [botName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), \" \", typingMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend(),\n          placeholder: \"Type your message...\",\n          className: \"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-2 p-2 bg-blue-500 rounded-full text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"bwf6uRiZQGBRvu1PopKOsWWYveg=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","motion","jsxDEV","_jsxDEV","botName","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","typingMessage","setTypingMessage","isTyping","setIsTyping","messagesEndRef","navigate","token","localStorage","getItem","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","prev","text","isUser","response","fetch","method","headers","body","JSON","stringify","content","status","Error","data","json","aiResponse","simulateTyping","error","message","index","length","typingInterval","setInterval","clearInterval","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","div","initial","opacity","x","animate","transition","duration","repeat","Infinity","ref","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moham/message-app/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // ✅ Import navigation\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst botName = \"Chatbot\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [typingMessage, setTypingMessage] = useState(\"\");\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const navigate = useNavigate(); // ✅ Hook for navigation\r\n\r\n  // ✅ Check if user is authenticated\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/\"); // Redirect to login if no token\r\n    }\r\n  }, [navigate]); // Runs once when component mounts\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, typingMessage]);\r\n\r\n  const handleSend = async () => {\r\n    if (!userMessage.trim()) return;\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    setMessages((prev) => [...prev, { text: userMessage, isUser: true }]);\r\n    setUserMessage(\"\");\r\n\r\n    try {\r\n      setIsTyping(true);\r\n      setTypingMessage(\"AI is typing...\");\r\n\r\n      const response = await fetch(\"http://localhost:8000/message\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ content: userMessage }),\r\n      });\r\n\r\n      if (response.status === 401) {\r\n        throw new Error(\"Unauthorized: Please log in again.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      const aiResponse = data.response;\r\n\r\n      setTypingMessage(\"\");\r\n      setIsTyping(false);\r\n      simulateTyping(aiResponse);\r\n    } catch (error) {\r\n      setMessages((prev) => [...prev, { text: `Error: ${error.message}`, isUser: false }]);\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const simulateTyping = (text) => {\r\n    setTypingMessage(\"\");\r\n    let index = text.length;\r\n\r\n    const typingInterval = setInterval(() => {\r\n      if (index === 0) {\r\n        clearInterval(typingInterval);\r\n        setMessages((prev) => [...prev, { text, isUser: false }]);\r\n      } else {\r\n        setTypingMessage(text.slice(index - 1));\r\n        index--;\r\n      }\r\n    }, 50);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\">\r\n      <div className=\"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-center text-2xl font-bold mb-4\">Chat with {botName}</h2>\r\n        <div className=\"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\">\r\n          {messages.map((msg, index) => (\r\n            <motion.div\r\n              key={index}\r\n              initial={{ opacity: 0, x: msg.isUser ? 50 : -50 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className={`p-3 rounded-lg max-w-xs ${\r\n                msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"\r\n              }`}\r\n            >\r\n              <strong>{msg.isUser ? \"You\" : botName}:</strong> {msg.text}\r\n            </motion.div>\r\n          ))}\r\n          {isTyping && (\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ duration: 0.3, repeat: Infinity }}\r\n              className=\"p-3 bg-gray-600 text-white rounded-lg max-w-xs\"\r\n            >\r\n              <strong>{botName}:</strong> {typingMessage}\r\n            </motion.div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"flex items-center mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={userMessage}\r\n            onChange={(e) => setUserMessage(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n            placeholder=\"Type your message...\"\r\n            className=\"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\r\n          />\r\n          <button onClick={handleSend} className=\"ml-2 p-2 bg-blue-500 rounded-full text-white\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,OAAO,GAAG,SAAS;AAEzB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMkB,cAAc,GAAGhB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACAF,SAAS,CAAC,MAAM;IACd,MAAMmB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVD,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhBlB,SAAS,CAAC,MAAM;IAAA,IAAAsB,qBAAA;IACd,CAAAA,qBAAA,GAAAL,cAAc,CAACM,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAAChB,QAAQ,EAAEI,aAAa,CAAC,CAAC;EAE7B,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACf,WAAW,CAACgB,IAAI,CAAC,CAAC,EAAE;IAEzB,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3CX,WAAW,CAAEkB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAElB,WAAW;MAAEmB,MAAM,EAAE;IAAK,CAAC,CAAC,CAAC;IACrElB,cAAc,CAAC,EAAE,CAAC;IAElB,IAAI;MACFI,WAAW,CAAC,IAAI,CAAC;MACjBF,gBAAgB,CAAC,iBAAiB,CAAC;MAEnC,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUf,KAAK;QAClC,CAAC;QACDgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAE3B;QAAY,CAAC;MAC/C,CAAC,CAAC;MAEF,IAAIoB,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;MACvD;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClC,MAAMC,UAAU,GAAGF,IAAI,CAACV,QAAQ;MAEhCjB,gBAAgB,CAAC,EAAE,CAAC;MACpBE,WAAW,CAAC,KAAK,CAAC;MAClB4B,cAAc,CAACD,UAAU,CAAC;IAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdnC,WAAW,CAAEkB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAE,UAAUgB,KAAK,CAACC,OAAO,EAAE;QAAEhB,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;MACpFd,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAM4B,cAAc,GAAIf,IAAI,IAAK;IAC/Bf,gBAAgB,CAAC,EAAE,CAAC;IACpB,IAAIiC,KAAK,GAAGlB,IAAI,CAACmB,MAAM;IAEvB,MAAMC,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvC,IAAIH,KAAK,KAAK,CAAC,EAAE;QACfI,aAAa,CAACF,cAAc,CAAC;QAC7BvC,WAAW,CAAEkB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;UAAEC,IAAI;UAAEC,MAAM,EAAE;QAAM,CAAC,CAAC,CAAC;MAC3D,CAAC,MAAM;QACLhB,gBAAgB,CAACe,IAAI,CAACuB,KAAK,CAACL,KAAK,GAAG,CAAC,CAAC,CAAC;QACvCA,KAAK,EAAE;MACT;IACF,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;EAED,oBACE1C,OAAA;IAAKgD,SAAS,EAAC,mFAAmF;IAAAC,QAAA,eAChGjD,OAAA;MAAKgD,SAAS,EAAC,sDAAsD;MAAAC,QAAA,gBACnEjD,OAAA;QAAIgD,SAAS,EAAC,qCAAqC;QAAAC,QAAA,GAAC,YAAU,EAAChD,OAAO;MAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5ErD,OAAA;QAAKgD,SAAS,EAAC,2DAA2D;QAAAC,QAAA,GACvE7C,QAAQ,CAACkD,GAAG,CAAC,CAACC,GAAG,EAAEb,KAAK,kBACvB1C,OAAA,CAACF,MAAM,CAAC0D,GAAG;UAETC,OAAO,EAAE;YAAEC,OAAO,EAAE,CAAC;YAAEC,CAAC,EAAEJ,GAAG,CAAC9B,MAAM,GAAG,EAAE,GAAG,CAAC;UAAG,CAAE;UAClDmC,OAAO,EAAE;YAAEF,OAAO,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAE,CAAE;UAC9BE,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAI,CAAE;UAC9Bd,SAAS,EAAE,2BACTO,GAAG,CAAC9B,MAAM,GAAG,gCAAgC,GAAG,wBAAwB,EACvE;UAAAwB,QAAA,gBAEHjD,OAAA;YAAAiD,QAAA,GAASM,GAAG,CAAC9B,MAAM,GAAG,KAAK,GAAGxB,OAAO,EAAC,GAAC;UAAA;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,GAAG,CAAC/B,IAAI;QAAA,GARrDkB,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASA,CACb,CAAC,EACD3C,QAAQ,iBACPV,OAAA,CAACF,MAAM,CAAC0D,GAAG;UACTC,OAAO,EAAE;YAAEC,OAAO,EAAE;UAAE,CAAE;UACxBE,OAAO,EAAE;YAAEF,OAAO,EAAE;UAAE,CAAE;UACxBG,UAAU,EAAE;YAAEC,QAAQ,EAAE,GAAG;YAAEC,MAAM,EAAEC;UAAS,CAAE;UAChDhB,SAAS,EAAC,gDAAgD;UAAAC,QAAA,gBAE1DjD,OAAA;YAAAiD,QAAA,GAAShD,OAAO,EAAC,GAAC;UAAA;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC7C,aAAa;QAAA;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CACb,eACDrD,OAAA;UAAKiE,GAAG,EAAErD;QAAe;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eAENrD,OAAA;QAAKgD,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCjD,OAAA;UACEkE,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE7D,WAAY;UACnB8D,QAAQ,EAAGC,CAAC,IAAK9D,cAAc,CAAC8D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAChDI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAInD,UAAU,CAAC,CAAE;UACpDoD,WAAW,EAAC,sBAAsB;UAClCzB,SAAS,EAAC;QAA2D;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtE,CAAC,eACFrD,OAAA;UAAQ0E,OAAO,EAAErD,UAAW;UAAC2B,SAAS,EAAC,8CAA8C;UAAAC,QAAA,EAAC;QAEtF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClD,EAAA,CAvHID,OAAO;EAAA,QAMML,WAAW;AAAA;AAAA8E,EAAA,GANxBzE,OAAO;AAyHb,eAAeA,OAAO;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}