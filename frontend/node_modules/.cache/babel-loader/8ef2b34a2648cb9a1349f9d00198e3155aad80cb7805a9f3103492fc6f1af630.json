{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\chatGpt\\\\frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createNewChat, getUserChats, getChatMessages, sendMessage, logout } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [typingMessage, setTypingMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  // ✅ Wrap fetchChats in useCallback to avoid unnecessary re-creations\n  const fetchChats = useCallback(async () => {\n    const userChats = await getUserChats();\n    setChats(userChats);\n    if (userChats.length > 0) {\n      selectChat(userChats[0].id);\n    }\n  }, []); // No dependencies, runs once\n\n  // ✅ Fetch chats when component mounts\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/\");\n    } else {\n      fetchChats();\n    }\n  }, [navigate, fetchChats]); // Added fetchChats as a dependency ✅\n\n  const selectChat = async chatId => {\n    setSelectedChat(chatId);\n    const chatMessages = await getChatMessages(chatId);\n    setMessages(chatMessages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-bold mb-4\",\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewChat,\n          className: \"p-2 bg-green-500 rounded-lg text-white\",\n          children: \"+ New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          className: \"ml-auto p-2 bg-red-500 rounded-lg text-white\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex overflow-x-auto mb-4\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `p-2 m-1 rounded-lg ${chat.id === selectedChat ? \"bg-blue-500\" : \"bg-gray-700\"}`,\n          onClick: () => selectChat(chat.id),\n          children: [\"Chat \", chat.id]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: msg.isUser ? 50 : -50\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: `p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.isUser ? \"You\" : \"AI\", \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), \" \", msg.content]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            duration: 0.3,\n            repeat: Infinity\n          },\n          className: \"p-3 bg-gray-600 text-white rounded-lg max-w-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"AI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), \" \", typingMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend(),\n          placeholder: \"Type your message...\",\n          className: \"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-2 p-2 bg-blue-500 rounded-full text-white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"NZdEosxPIzmmRqC7aouQ7ZfO+gI=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","useNavigate","createNewChat","getUserChats","getChatMessages","sendMessage","logout","jsxDEV","_jsxDEV","Chatbot","_s","chats","setChats","selectedChat","setSelectedChat","messages","setMessages","userMessage","setUserMessage","typingMessage","setTypingMessage","isTyping","setIsTyping","messagesEndRef","navigate","fetchChats","userChats","length","selectChat","id","token","localStorage","getItem","chatId","chatMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleNewChat","map","chat","msg","index","div","initial","opacity","x","isUser","animate","transition","duration","content","repeat","Infinity","ref","type","value","onChange","e","target","onKeyDown","key","handleSend","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/moham/chatGpt/frontend/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createNewChat, getUserChats, getChatMessages, sendMessage, logout } from \"../services/api\";\r\n\r\nconst Chatbot = () => {\r\n  const [chats, setChats] = useState([]);\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [typingMessage, setTypingMessage] = useState(\"\");\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ Wrap fetchChats in useCallback to avoid unnecessary re-creations\r\n  const fetchChats = useCallback(async () => {\r\n    const userChats = await getUserChats();\r\n    setChats(userChats);\r\n    if (userChats.length > 0) {\r\n      selectChat(userChats[0].id);\r\n    }\r\n  }, []); // No dependencies, runs once\r\n\r\n  // ✅ Fetch chats when component mounts\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/\");\r\n    } else {\r\n      fetchChats();\r\n    }\r\n  }, [navigate, fetchChats]); // Added fetchChats as a dependency ✅\r\n\r\n  const selectChat = async (chatId) => {\r\n    setSelectedChat(chatId);\r\n    const chatMessages = await getChatMessages(chatId);\r\n    setMessages(chatMessages);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-4\">\r\n      <div className=\"max-w-lg w-full bg-gray-800 p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-center text-2xl font-bold mb-4\">Chatbot</h2>\r\n\r\n        {/* ✅ Sidebar for chats */}\r\n        <div className=\"flex mb-4\">\r\n          <button onClick={handleNewChat} className=\"p-2 bg-green-500 rounded-lg text-white\">\r\n            + New Chat\r\n          </button>\r\n          <button onClick={logout} className=\"ml-auto p-2 bg-red-500 rounded-lg text-white\">\r\n            Logout\r\n          </button>\r\n        </div>\r\n\r\n        {/* ✅ Chat list */}\r\n        <div className=\"flex overflow-x-auto mb-4\">\r\n          {chats.map((chat) => (\r\n            <button\r\n              key={chat.id}\r\n              className={`p-2 m-1 rounded-lg ${chat.id === selectedChat ? \"bg-blue-500\" : \"bg-gray-700\"}`}\r\n              onClick={() => selectChat(chat.id)}\r\n            >\r\n              Chat {chat.id}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* ✅ Messages */}\r\n        <div className=\"h-96 overflow-y-auto p-4 space-y-4 bg-gray-700 rounded-lg\">\r\n          {messages.map((msg, index) => (\r\n            <motion.div\r\n              key={index}\r\n              initial={{ opacity: 0, x: msg.isUser ? 50 : -50 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className={`p-3 rounded-lg max-w-xs ${msg.isUser ? \"bg-blue-500 text-white ml-auto\" : \"bg-gray-600 text-white\"}`}\r\n            >\r\n              <strong>{msg.isUser ? \"You\" : \"AI\"}:</strong> {msg.content}\r\n            </motion.div>\r\n          ))}\r\n\r\n          {/* ✅ AI typing effect */}\r\n          {isTyping && (\r\n            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 0.3, repeat: Infinity }} className=\"p-3 bg-gray-600 text-white rounded-lg max-w-xs\">\r\n              <strong>AI:</strong> {typingMessage}\r\n            </motion.div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* ✅ Input Field */}\r\n        <div className=\"flex items-center mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={userMessage}\r\n            onChange={(e) => setUserMessage(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n            placeholder=\"Type your message...\"\r\n            className=\"flex-1 p-3 text-white bg-gray-700 rounded-lg outline-none\"\r\n          />\r\n          <button onClick={handleSend} className=\"ml-2 p-2 bg-blue-500 rounded-full text-white\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}